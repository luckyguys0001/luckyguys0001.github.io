{"version":3,"sources":["utils/DebugLog.jsx","services/BasicAuthHashing.jsx","services/configration/env.production.js","theme.js","constants/Constant.jsx","config/AppConfig.jsx","scenes/global/reducer/sidebarReducer.js","scenes/global/context/sidebarContext.jsx","assets/icons/alert.svg","assets/icons/bell.svg","assets/icons/bills.svg","assets/icons/budget.svg","assets/icons/card.svg","assets/icons/check.svg","assets/icons/empty_check.svg","assets/icons/gears.svg","assets/icons/home.svg","assets/icons/menu.svg","assets/icons/plane.svg","assets/icons/plus.svg","assets/icons/report.svg","assets/icons/search.svg","assets/icons/user.svg","assets/icons/wallet.svg","assets/icons/wealth.svg","assets/images/person_one.jpg","assets/images/person_two.jpg","assets/images/person_three.jpg","assets/images/person_four.jpg","assets/login/Login-BG-2.jpg","assets/login/Logo.svg","scenes/global/Topbar.jsx","components/BackButtonListener.jsx","constants/Strings.jsx","components/GreetingHeader.jsx","components/SectionHeader.jsx","components/NoDataFound.jsx","components/SimpleTable.jsx","scenes/validations/index.jsx","scenes/global/Sidebar.jsx","utils/ConnectionStatus.jsx","utils/UseOnlineStatus.jsx","constants/LocalStorageKeyValuePairString.jsx","utils/localStorageUtils.js","components/CustomProgressDialog.jsx","components/ErrorAlertDialog.jsx","services/AesGcmEncryption.jsx","utils/RequestIdGenerator.js","services/ApiTags.jsx","services/configration/config.js","services/AxiosIntercepter.jsx","services/ApiService.jsx","scenes/payoutsArchive/index.jsx","components/ColumnHeader.jsx","components/CustomButton.jsx","scenes/payouts/index.jsx","data/mockData.js","components/Header.jsx","scenes/invoices/index.jsx","scenes/contacts/index.jsx","components/PayoutHeader.jsx","scenes/contacts/DataGridDemo.jsx","scenes/faq/index.jsx","scenes/form/index.jsx","scenes/login/components/LoginFieldBox.jsx","scenes/login/SignInSide.jsx","components/HighlightBox.jsx","components/OnHoldSummaryTable.jsx","scenes/dashboard/finance/FinanceHomePage.jsx","components/HighlightStats.jsx","scenes/onhold/index.jsx","scenes/exclusion/index.jsx","scenes/witholdingTax/index.jsx","scenes/freezeAccount/index.jsx","scenes/creditDebit/index.jsx","scenes/payoutDates/index.jsx","scenes/earmark/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["DebugLog","message","generateBasicAuthHeader","hashedPassword","passwordToHash","salt","generatedPassword","md5Hash","createHash","update","hashResult","digest","Buffer","from","toString","replace","error","getHashedPassword","process","finalString","btoa","userName","config","apiBaseUrl","dummyApiBaseUrl","tokens","mode","grey","primary","greenAccent","redAccent","blueAccent","white","ColorModeContext","createContext","toggleColorMode","useMode","setMode","useState","colorMode","useMemo","prev","createTheme","colors","palette","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings","FINANCE_DASHBOARD","VALIDATION_ROUTE","PAYOUT_ROUTE","ON_HOLD_ROUTE","EXCLUSION_ROUTE","PAYOUT_DATES_ROUTE","WITHOLDING_TAX_ROUTE","FREEZE_ACCOUNT_ROUTE","CREDIT_DEBIT_ROUTE","REPORTS_ROUTE","EARMARK_ROUTE","openSlidingMenu","atomWithStorage","showErrorAlertDialog","isAuthPageAtom","collapseMenu","globalSearchText","sidebarReducer","SidebarContext","Topbar","theme","useTheme","useContext","isAuthPage","setAuthStatus","useAtom","state","toggleSidebar","isCollapsed","setIsCollapsed","navigate","useNavigate","isSmallScreen","setIsSmallScreen","searchQuery","setSearchQuery","openSlidingBar","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","_jsx","children","_jsxs","Box","display","justifyContent","p","pb","backgroundColor","borderRadius","sx","position","left","color","IconButton","onClick","MenuOutlinedIcon","mr","InputBase","ml","flex","placeholder","value","onChange","e","target","type","SearchIcon","DarkModeOutlinedIcon","LightModeOutlinedIcon","NotificationsOutlinedIcon","LogoutOutlined","BackButtonListener","_ref","location","useLocation","hash","pathname","search","pressed","setPressed","React","onpopstate","console","log","ALERT","NO_INTERNET_CONNECTION_FOUND","YOU_ARE_ONLINE","YOU_ARE_OFFLINE","FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT","LOADING_PLEASE_WAIT","ERROR_WHILE_AUTHENTICATING_USER","ERROR_WHILE_FETCHING_PAYOUT_DETAILS","ERROR_FOUND_DURING_API_CALL","NO_RECORD_FOUND","GreetingHeader","greeting","name","Grid","container","mb","direction","paddingTop","xs","sm","paddingLeft","item","Typography","variant","fontWeight","m","SectionHeader","sectionHeading","sectionIcon","md","lg","xl","opacity","alignItems","spacing","src","width","NoDataFound","height","align","mt","createData","cycle","status","cutoff","payout","details","SimpleTable","statusBG","statusData","data","to","selectedRow","setSelectedRow","length","TableContainer","Table","minWidth","TableHead","textTransform","TableRow","letterSpacing","TableCell","paddingRight","TableBody","map","payoutSummaryList","border","textDecoration","component","Link","scope","cutOff","payoutBy","id","ValidationScreen","Item","title","icon","selected","setSelected","MenuItem","active","style","Sidebar","slidingMenuStatus","setSlidingMenu","activeLinkIdx","sidebarClass","setSidebarClass","isSidebarOpen","className","concat","padding","zIndex","ProSidebar","collapsed","Menu","iconShape","undefined","margin","pt","OtherHousesOutlinedIcon","GppMaybeOutlinedIcon","CurrencyExchangeOutlinedIcon","PauseOutlinedIcon","DoNotDisturbAltOutlinedIcon","CalendarTodayOutlinedIcon","PersonRemoveOutlinedIcon","ArticleOutlinedIcon","CalculateOutlinedIcon","ContactsOutlinedIcon","AcUnitOutlinedIcon","PercentOutlinedIcon","ConnectionStatus","isOnline","setIsOnline","navigator","onLine","enqueueSnackbar","useSnackbar","handleOnline","autoHideDuration","handleOffline","UseOnlineStatus","BASIC_AUTH_TOKKEN","MESSAGE_KEY","SESSION_ID","LOGIN_ID","saveToLocalStorage","key","localStorage","setItem","getFromLocalStorage","getItem","deleteLocalStorageKey","keyToDelete","removeItem","CustomProgressDialog","open","text","dialogOpen","setDialogOpen","event","stopPropagation","Dialog","onClose","handleClose","DialogContent","flexDirection","CircularProgress","marginTop","Transition","props","ref","Slide","ShowErrorAlertDialog","content","setOpen","getDialogStatus","setErrorDialog","fullWidth","setFullWidth","maxWidth","setMaxWidth","TransitionComponent","keepMounted","DialogTitle","DialogActions","Button","async","initializeEncryption","keyBase64","apiTag","JSON","stringify","encrypted","require","AES","encrypt","encryptWithAesEcb","then","encryptedData","catch","generateRequestId","timestamp","Date","getTime","random","Math","floor","ApiType","baseUrl","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","Promise","reject","response","getPayoutSummary","reqestParams","post","getOnHoldSummary","PayoutsArchive","isNetworkConnectionAvailable","loading","setLoading","setTitle","setContent","setError","getProgressbarText","setProgressbarText","payoutSummary","setPayoutSummary","blockNavigation","action","alert","showErrorAlert","pageNumber","pageSize","encryptedContentData","payoutSummaryRequestData","requestId","loginId","sessionId","result","getPayoutSummaryData","showNoInternetSnackBar","SnackbarProvider","maxSnack","onHoldSummaryColumnHeader","field","headerName","cellClassName","headerAlign","payoutSummaryColumnHeader","CustomButton","btnBG","btnColor","btnTxt","btnStartIcon","btnEndIcon","boxShadow","startIcon","endIcon","Payouts","gridHeight","setGridHeight","totalNoOfRows","setTotalNoOfRows","setPageSize","currentPage","setCurrentPage","filteredRows","filter","row","Object","values","some","String","toLowerCase","includes","borderBottom","borderTop","DataGrid","rows","slice","columns","components","Toolbar","GridToolbar","checkboxSelection","selecion","rowCount","pagination","onPageChange","newPage","parseInt","Array","_","index","Stack","mockDataContacts","email","age","phone","address","city","zipCode","registrarId","mockDataInvoices","cost","date","Header","subtitle","Invoices","renderCell","params","Contacts","AlignVerticalCenter","PayoutHeader","lastName","firstName","CustomHeader","DataGridDemo","autoHeight","header","FAQ","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","checkoutSchema","yup","shape","required","contact","matches","address1","address2","initialValues","Form","isNonMobile","useMediaQuery","Formik","onSubmit","validationSchema","errors","touched","handleBlur","handleChange","handleSubmit","gap","gridTemplateColumns","gridColumn","TextField","label","onBlur","helperText","LoginFieldBox","setEmail","password","setPassword","resetAllConfigration","basicAuthTokken","requestBasicAuth","forEach","isLoginApiCallRequired","includeAuthorizationHeader","authToken","get","getBasicAuth","messageKey","basicAuthToken","doSignUp","pswd","signInData","imeiNumber","isAutoLogin","encryptedLoginData","signInReqestData","CONSTANT","emailValue","passwordValue","autoComplete","autoFocus","FormControlLabel","control","CheckBox","href","SignInSide","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","Paper","elevation","py","px","HighlightBox","highlightName","highlightCount","highlightBG","highlightColor","highlightIcon","OnHoldSummaryTable","list","code","startDate","endDate","FinanceHomePage","onHoldData","setOnHoldData","requestData","onHoldSummaryList","getOnHoldData","HighlightStats","highlightTotal","highlight1","highlight1Stat","highlight2","highlight2Stat","highlight3","highlight3Stat","Divider","orientation","flexItem","OnHoldSummary","onHoldSummary","setOnHoldSummary","requestOnHoldSummaryData","ExclusionScreen","WitholdingTaxScreen","FreezeAccountScreen","CreditDebitScreen","PayoutDatesScreen","EarmarkScreen","App","isSidebar","setIsSidebar","Provider","ThemeProvider","CssBaseline","Routes","Route","path","element","Validations","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.26467d9d.chunk.js","sourcesContent":["\nfunction DebugLog(message) {\n    if (process.env.NODE_ENV === 'development') {\n        console.log(message);\n      }\n  return null; // This component doesn't render anything to the DOM\n};\n\nexport default DebugLog;","import { createHash } from 'crypto';\nimport DebugLog from '../utils/DebugLog';\n\nexport function generateBasicAuthHeader() {\n\n    const userName = process.env.REACT_APP_USER_NAME;\n    const password =  process.env.REACT_APP_USER_PASSWORD;\n    const requestId =  process.env.REACT_APP_USER_REQUEST_NO;\n\n\n    const hashedPassword = getHashedPassword(password,requestId)\n    const newString = userName+':'+hashedPassword;\n    const encodedString = btoa(newString);\n    const  finalString = encodedString.replace(/\\n/g, ''); // Remove newline characters\n    DebugLog(\"Encoded string:\", finalString);\n\n     return finalString;\n\n  }\n\n function getHashedPassword(passwordToHash, salt) {\n    let generatedPassword = null;\n    try {\n      const md5Hash = createHash('md5');\n      md5Hash.update(salt);\n      md5Hash.update(passwordToHash);\n      const hashResult = md5Hash.digest();\n      const base64Encoded = Buffer.from(hashResult).toString('base64');\n      generatedPassword = base64Encoded.replace(/\\n/g, ''); // Remove newline characters\n      DebugLog(\"generatedPassword===========\"+generatedPassword)\n    } catch (error) {\n      DebugLog('Hashing error:', error);\n    }\n    return generatedPassword;\n  }","const config = {\n    apiBaseUrl: 'https://partnerservicesiot.ytlcomms.my/yesshopadminweb/ws/v1/',\n   \n    // Other production-specific configuration variables\n    dummyApiBaseUrl: 'https://dummyjson.com/production',\n  };\n  \n  export default config;","import { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\nimport '@fontsource/montserrat/300.css';\nimport '@fontsource/montserrat/400.css';\nimport '@fontsource/montserrat/500.css';\nimport '@fontsource/montserrat/700.css';\n// color design tokens export\nexport const tokens = (mode) => ({\n  ...(mode === \"dark\"\n    ? {\n        grey: {\n          100: \"#e0e0e0\",\n          200: \"#c2c2c2\",\n          300: \"#a3a3a3\",\n          400: \"#858585\",\n          500: \"#666666\",\n          600: \"#525252\",\n          700: \"#3d3d3d\",\n          800: \"#292929\",\n          900: \"#141414\",\n        },\n        primary: {\n          // 100: \"#d0d1d5\",\n          // 200: \"#a1a4ab\",\n          // 300: \"#727681\",\n          // 400: \"#1F2A40\",\n          // 500: \"#141b2d\",\n          // 600: \"#101624\",\n          // 700: \"#0c101b\",\n          // 800: \"#080b12\",\n          // 900: \"#040509\",\n\n          100: \"#FF0084\",\n          200: \"#2F3BF5\",\n          300: \"#1A1E47\",\n          400: \"#71D9AD\",\n          500: \"#FFE680\",\n          600: \"#FF9573\",\n          700: \"#94B0E0\",\n          800: \"#E8E9ED\",\n          900: \"#F5F6FA\",\n        },\n        greenAccent: {\n          100: \"#dbf5ee\",\n          200: \"#b7ebde\",\n          300: \"#94e2cd\",\n          400: \"#70d8bd\",\n          500: \"#4cceac\",\n          600: \"#3da58a\",\n          700: \"#2e7c67\",\n          800: \"#1e5245\",\n          900: \"#0f2922\",\n        },\n        redAccent: {\n          100: \"#f8dcdb\",\n          200: \"#f1b9b7\",\n          300: \"#e99592\",\n          400: \"#e2726e\",\n          500: \"#db4f4a\",\n          600: \"#af3f3b\",\n          700: \"#832f2c\",\n          800: \"#FF0084\", /* Primary Pink */\n          900: \"#4B0128\", /* New Dark Pink */\n        },\n        blueAccent: {\n          100: \"#e1e2fe\",\n          200: \"#c3c6fd\",\n          300: \"#a4a9fc\",\n          400: \"#868dfb\",\n          500: \"#6870fa\",\n          600: \"#535ac8\",\n          700: \"#3e4396\",\n          800: \"#2a2d64\",\n          900: \"#151632\",\n        },\n        white:{\n          50: \"#000000\",\n          100: \"#262626\",\n          200: \"#434343\",\n          300: \"#555555\",\n          400: \"#7b7b7b\",\n          500: \"#9d9d9d\",\n          600: \"#c4c4c4\",\n          700: \"#d9d9d9\",\n          800: \"#e9e9e9\",\n          900: \"#f5f5f5\",\n        }\n      }\n    \n      /* Light Mode */\n\n    : {\n        grey: {\n          // 100: \"#141414\",\n          // 200: \"#292929\",\n          // 300: \"#3d3d3d\",\n          // 400: \"#525252\",\n          // 500: \"#666666\",\n          // 600: \"#858585\",\n          // 700: \"#a3a3a3\",\n          // 800: \"#c2c2c2\",\n          // 900: \"#e0e0e0\",\n\n          900: \"#FFFFFF\", // White - Primary Base\n          800: \"#F8F7FD\", // Lighter Grey - Main BG 50%\n          700: \"#F5F6FA\", // Primary Body Grey - Main BG\n          600: \"#E4EBF7\", // Lighter Blue - Yonder 50%\n          500: \"#94B0E0\", // Light Blue - Yonder Blue\n          400: \"#CBCBCB\", // Grey - Button Disabled\n          300: \"#888888\", // Grey - Tertiary\n          200: \"#2B2B2B\", // Black - Secondary\n          100: \"#000000\", // Jet Black - Primary\n        },\n        primary: {\n          // 100: \"#040509\",\n          // 200: \"#080b12\",\n          // 300: \"#0c101b\",\n          // 400: \"#f2f0f0\", // manually changed\n          // 500: \"#141b2d\",\n          // 600: \"#1F2A40\",\n          // 700: \"#727681\",\n          // 800: \"#a1a4ab\",\n          // 900: \"#d0d1d5\",\n\n          100: \"#FF0084\",\n          200: \"#2F3BF5\",\n          300: \"#1A1E47\",\n          400: \"#71D9AD\",\n          500: \"#FFE680\",\n          600: \"#FF9573\",\n          700: \"#94B0E0\",\n          800: \"#E8E9ED\",\n          900: \"#F5F6FA\",\n        },\n        greenAccent: {\n          100: \"#0f2922\",\n          200: \"#1e5245\",\n          300: \"#2e7c67\",\n          400: \"#3da58a\",\n          500: \"#4cceac\",\n          600: \"#70d8bd\",\n          700: \"#94e2cd\",\n          800: \"#b7ebde\",\n          900: \"#dbf5ee\",\n        },\n        redAccent: {\n          100: \"#4B0128\",\n          200: \"#FF0084\",\n          300: \"#832f2c\",\n          400: \"#af3f3b\",\n          500: \"#db4f4a\",\n          600: \"#e2726e\",\n          700: \"#e99592\",\n          800: \"#f1b9b7\",\n          900: \"#f8dcdb\",\n        },\n        blueAccent: {\n          100: \"#151632\",\n          200: \"#2a2d64\",\n          300: \"#3e4396\",\n          400: \"#535ac8\",\n          500: \"#6870fa\",\n          600: \"#868dfb\",\n          700: \"#a4a9fc\",\n          800: \"#c3c6fd\",\n          900: \"#e1e2fe\",\n        },\n        white:{\n          50: \"#ffffff\",\n          100: \"#fafafa\",\n          200: \"#f5f5f5\",\n          300: \"#f0f0f0\",\n          400: \"#dedede\",\n          500: \"#c2c2c2\",\n          600: \"#979797\",\n          700: \"#818181\",\n          800: \"#606060\",\n          900: \"#3c3c3c\",\n        }\n      }),\n});\n\n// mui theme settings\nexport const themeSettings = (mode) => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            primary: {\n              main: colors.primary[500],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: colors.primary[500],\n            },\n          }\n        : {\n            // palette values for light mode\n            primary: {\n              main: colors.primary[100],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: colors.grey[700],\n            },\n          }),\n    },\n    typography: {\n\n      fontFamily: [\"Montserrat\"].join(\",\"),\n      fontSize: 12,\n\n      h1: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 40,\n      },\n      h2: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 32,\n      },\n      h3: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 24,\n      },\n      h4: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 30,\n      },\n      h5: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 20,\n      },\n      h6: {\n        fontFamily: [\"Montserrat\", \"montserrat\"].join(\",\"),\n        fontSize: 16,\n      },\n    },\n  };\n};\n\n// context for color mode\nexport const ColorModeContext = createContext({\n  toggleColorMode: () => {},\n});\n\nexport const useMode = () => {\n  const [mode, setMode] = useState(\"light\");\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () =>\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n","\n// Routes started\nexport const LOGIN = '/SignInSide';\nexport const FINANCE_DASHBOARD = '/finance_dashboard';\nexport const DELAER_DASHBOARD_ROUTE = '/dealer_dashboard';\nexport const VALIDATION_ROUTE = '/validations';\nexport const PAYOUT_ARCHIEVE_ROUTE = '/payoutsArchive';\nexport const PAYOUT_ROUTE = '/payouts';\nexport const ON_HOLD_ROUTE = '/onhold';\nexport const CONTACT_ROUTE = '/contacts';\nexport const INVOICES_ROUTE = '/invoices';\nexport const FORMS_ROUTE = '/form';\nexport const EXCLUSION_ROUTE = '/exclusion';\nexport const PAYOUT_DATES_ROUTE = '/payoutDates';\nexport const WITHOLDING_TAX_ROUTE = '/withHoldingTax';\nexport const FREEZE_ACCOUNT_ROUTE = '/freezeAccount';\nexport const CREDIT_DEBIT_ROUTE = '/creditDebit';\nexport const REPORTS_ROUTE = '/reports';\nexport const ADJUSTMENT_ROUTE = '/adjustment';\nexport const EARMARK_ROUTE = '/earkmark';\n\n\n\n\n\n// Routes end\n\n\n \n\n// Other Common String\nexport const OPEN_SLIDING_MENU = 'openSlidingMenu';\nexport const COLLAPSE_MENU = 'collapseMenu';\nexport const IS_AUTH_PAGE = 'isAuthPage';\nexport const GET_DIALOG_STATUS = 'getDialogStatus';\nexport const GLOBAL_SEARCH = 'global-search';\n\n\nexport const DARK_MODE = 'darkMode';\nexport const AUTHORIZATION = 'Authorization';\nexport const CONTENT_TYPE = 'Content-Type';\nexport const APPLICATION_JSON = 'application/json';\n\n\n\n\n\n\n\n","import { atomWithStorage } from 'jotai/utils'\nimport { COLLAPSE_MENU, DARK_MODE, GET_DIALOG_STATUS, GLOBAL_SEARCH, IS_AUTH_PAGE, OPEN_SLIDING_MENU } from '../constants/Constant'\n\nexport const darkModeAtom = atomWithStorage(DARK_MODE, false)\n\nexport const openSlidingMenu = atomWithStorage(OPEN_SLIDING_MENU, true)\nexport const showErrorAlertDialog = atomWithStorage(GET_DIALOG_STATUS, false)\nexport const isAuthPageAtom = atomWithStorage(IS_AUTH_PAGE, true)\nexport const collapseMenu = atomWithStorage(COLLAPSE_MENU, true)\nexport const globalSearchText = atomWithStorage(GLOBAL_SEARCH, '')\n\n\n","const sidebarReducer = (state, action) => {\n    if(action.type === \"TOGGLE_SIDEBAR\"){\n        return { ...state, isSidebarOpen: !state.isSidebarOpen}\n    }\n    throw new Error(`No matching \"${action.type} action type`);\n}\n\nexport default sidebarReducer;","import { createContext, useReducer } from \"react\";\nimport reducer from \"../reducer/sidebarReducer\";\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n    isSidebarOpen: false\n}\n\nexport const SidebarContext = createContext({});\n\n\nexport const SidebarProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const toggleSidebar = () => {\n        dispatch({ type: \"TOGGLE_SIDEBAR\" })\n    }\n    return (\n        <SidebarContext.Provider value = {{\n            ...state,\n            toggleSidebar\n        }}>\n            { children }\n        </SidebarContext.Provider>\n    )\n}\n\nSidebarProvider.propTypes = {\n    children: PropTypes.node\n}","export default __webpack_public_path__ + \"static/media/alert.ee17e522.svg\";","export default __webpack_public_path__ + \"static/media/bell.1362b91a.svg\";","export default __webpack_public_path__ + \"static/media/bills.4e4e4f39.svg\";","export default __webpack_public_path__ + \"static/media/budget.505dddf5.svg\";","export default __webpack_public_path__ + \"static/media/card.82fefee0.svg\";","export default __webpack_public_path__ + \"static/media/check.47640311.svg\";","export default __webpack_public_path__ + \"static/media/empty_check.c56bc89b.svg\";","export default __webpack_public_path__ + \"static/media/gears.a6648f06.svg\";","export default __webpack_public_path__ + \"static/media/home.f9303d1a.svg\";","export default __webpack_public_path__ + \"static/media/menu.671405f9.svg\";","export default __webpack_public_path__ + \"static/media/plane.42b7328c.svg\";","export default __webpack_public_path__ + \"static/media/plus.d596a11e.svg\";","export default __webpack_public_path__ + \"static/media/report.8a7cdf49.svg\";","export default __webpack_public_path__ + \"static/media/search.b9edbe38.svg\";","export default __webpack_public_path__ + \"static/media/user.003b2f49.svg\";","export default __webpack_public_path__ + \"static/media/wallet.be73d135.svg\";","export default __webpack_public_path__ + \"static/media/wealth.243e296d.svg\";","export default __webpack_public_path__ + \"static/media/person_one.cff9fc4c.jpg\";","export default __webpack_public_path__ + \"static/media/person_two.348b2fcc.jpg\";","export default __webpack_public_path__ + \"static/media/person_three.de2b26ea.jpg\";","export default __webpack_public_path__ + \"static/media/person_four.dcc4b736.jpg\";","export default __webpack_public_path__ + \"static/media/Login-BG-2.c74cb399.jpg\";","export default __webpack_public_path__ + \"static/media/Logo.cc65ba53.svg\";","import { Box, IconButton, useTheme } from \"@mui/material\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport InputBase from \"@mui/material/InputBase\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  collapseMenu,\n  globalSearchText,\n  isAuthPageAtom,\n  openSlidingMenu,\n} from \"../../config/AppConfig\";\nimport { useAtom } from \"jotai\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LogoDevOutlined, LogoutOutlined } from \"@mui/icons-material\";\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport { SidebarContext } from \"../../scenes/global/context/sidebarContext.jsx\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport { iconsImgs } from \"../../utils/images/images.js\";\n\nconst Topbar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const colorMode = useContext(ColorModeContext);\n  const [isAuthPage, setAuthStatus] = useAtom(isAuthPageAtom);\n  //const [slidingMenuStatus, setSlidingMenu] = useAtom(openSlidingMenu)\n  const { state, toggleSidebar } = useContext(SidebarContext);\n  const [isCollapsed, setIsCollapsed] = useAtom(collapseMenu);\n\n  const navigate = useNavigate();\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsSmallScreen(window.innerWidth <= 600); // Adjust the width threshold as needed\n\n      if (isSmallScreen) {\n        setIsCollapsed(true);\n      } //else{\n      //   setIsCollapsed(false)\n      // }\n    };\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handleResize initially to set the initial state\n    handleResize();\n\n    // Cleanup by removing the event listener when component unmounts\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isSmallScreen]); // Empty dependency array ensures that this effect runs only once on component mount\n\n  function goToLoginPage() {\n    setAuthStatus(true);\n    navigate(\"/\");\n  }\n\n  function openSlidingBar() {\n    try {\n      if (isCollapsed) {\n        setIsCollapsed(false);\n      } else {\n        setIsCollapsed(true);\n      }\n      // toggleSidebar()\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  return (\n    <div>\n      {!isAuthPage ? (\n        <Box display=\"flex\" justifyContent=\"flex-end\" p={2} pb={0}>\n          <Box\n            display=\"flex\"\n            backgroundColor=\"#fff\"\n            borderRadius={\"20px\"}\n            justifyContent={\"flex-start\"}\n            sx={{\n              position: \"absolute\",\n              left: \"20px\",\n              color: colors.grey[200],\n            }}\n          >\n            {/* <IconButton onClick={colorMode.toggleColorMode}>\n          {theme.palette.mode === \"dark\" ? (\n            <DarkModeOutlinedIcon />\n          ) : (\n            <LightModeOutlinedIcon />\n          )}\n        </IconButton> */}\n            {/* \n<button type=\"button\" className=\"sidebar-toggler\" onClick={() => toggleSidebar() }>\n                <img src={ iconsImgs.menu } alt=\"\" />\n            </button> */}\n\n            <IconButton onClick={() => openSlidingBar()}>\n              <MenuOutlinedIcon />\n            </IconButton>\n          </Box>\n\n          {/* SEARCH BAR */}\n          <Box\n            display=\"flex\"\n            backgroundColor={colors.grey[900]}\n            borderRadius=\"20px\"\n            mr={1}\n          >\n            <InputBase\n              sx={{ ml: 2, flex: 1 }}\n              placeholder=\"Search\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n\n            <IconButton type=\"button\" sx={{ p: 1 }}>\n              <SearchIcon />\n            </IconButton>\n          </Box>\n\n          {/* ICONS */}\n          <Box display=\"flex\" backgroundColor=\"#fff\" borderRadius={\"20px\"}>\n            <IconButton onClick={colorMode.toggleColorMode}>\n              {theme.palette.mode === \"dark\" ? (\n                <DarkModeOutlinedIcon />\n              ) : (\n                <LightModeOutlinedIcon />\n              )}\n            </IconButton>\n\n            <IconButton onClick={() => openSlidingBar()}>\n              <NotificationsOutlinedIcon />\n            </IconButton>\n\n            <IconButton onClick={() => goToLoginPage()}>\n              <LogoutOutlined />\n            </IconButton>\n          </Box>\n        </Box>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Topbar;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { isAuthPageAtom } from \"../config/AppConfig\";\nimport { atom, useAtom } from 'jotai';\nimport { Box } from '@mui/material';\nimport { useHistory } from \"react-router-dom\";\n\n// componentDidMount() {\n//     window.history.pushState(null, document.title, window.location.href);\n//     window.addEventListener('popstate', function (event){\n//         window.history.pushState(null, document.title,  window.location.href);\n//     });\n//   };\n\nexport const BackButtonListener = ({ children }) => {\n\n  const location = useLocation();\n  const { hash, pathname, search } = location;\n  const navigate = useNavigate();\n\n    \n    const [pressed, setPressed] = React.useState(false)\n    const [isAuthPage, setAuthStatus] = useAtom(isAuthPageAtom)\n\n    React.useEffect(() => {\n      window.onpopstate = e => {\n        \n        setPressed(true)\n        console.log(\"pathname=====\"+pathname)\n        if(!isAuthPage && pathname===\"/\"){\n              setAuthStatus(true);   \n              console.log(\"if block===\"+pathname+\"=====isAuthPage-----\"+isAuthPage)\n          } \n          else if(isAuthPage && pathname===\"/\" || isAuthPage && pathname===\"/\"){\n            navigate(\"/\");\n            console.log(\"else if block===\"+pathname +\"=====isAuthPage-----\"+isAuthPage)\n          }\n          else { \n              setAuthStatus(false)\n              console.log(\"else block====\"+pathname+\"=====isAuthPage-----\"+isAuthPage)\n            }\n             \n      \n      };\n    });\n\n\n\n   return (\n      <Box>\n      {/* <div>Pathname: <b>{pathname}</b><br />\n      Search params: <b>{search}</b><br />\n      Hash: <b>{hash}</b></div>\n      <h3>Back button: {pressed.toString()}</h3> */}\n      </Box>\n    );\n  };","export const INCENTIVES = 'Incentive';\nexport const REPORTS = 'Reports';\nexport const DATA = 'Data';\nexport const DASHBOARD = 'Dashboard';\n\nexport const VALIDATIONS = 'Validations';\nexport const PAYOUT = 'Payout';\nexport const ON_HOLD = 'On-Hold';\nexport const EXCLUSION = 'Exclusions';\nexport const FORMULAS = 'Formulas';\n\nexport const CONTACTs = 'Contacts';\nexport const INVOICES = 'Invoices';\nexport const FORMS = 'Forms';\nexport const PAYOUT_DATES = 'Payout Dates';\nexport const FREEZE_ACCOUNT = 'Freeze Account';\nexport const CREDIT_DEBIT = 'Credit Debit';\nexport const ADJUSTMENT = 'Adjustment';\nexport const EARMARK = 'Earkmark';\n\nexport const WITHOLDING_TAX = 'Witholding Tax';\nexport const MANAGE_TEAM = 'Manage Team';\nexport const CONTACT_INFORMATIONS = 'Contact Informations';\n\nexport const INVOICE_BALANCE = 'Invoice Balance';\n\n// Login Box\nexport const ALERT = 'Alert';\nexport const ERROR = 'Error';\nexport const NO_INTERNET_CONNECTION_FOUND = 'No Internet Connection Found!';\nexport const YOU_ARE_ONLINE = 'You are online.';\nexport const YOU_ARE_OFFLINE = 'You are offline!';\n\n\nexport const PROCESSING_PLEASE_WAIT = 'Processing , Please wait...';\nexport const FETCHING_PAYOUT_DETAILS_PLEASE_WAIT = 'Loading Payout Details , Please wait...';\nexport const FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT = 'Loading Payout Summary , Please wait...';\n\nexport const LOADING_PLEASE_WAIT = 'Loading , Please wait...';\nexport const LOADING_CONFIGRATION_PLEASE_WAIT = 'Loading Configration, Please wait...';\nexport const AUTHENTICATING_PLEASE_WAIT = 'Authenticating, Please wait...';\nexport const ERROR_WHILE_AUTHENTICATING_USER = 'Error while authenticating user: ';\nexport const ERROR_WHILE_RETRIEVING_BASIC_AUTH = 'Error while retrieving basic auth: ';\nexport const ERROR_WHILE_FETCHING_PAYOUT_DETAILS = 'Error while fetching Payout Details: ';\nexport const ERROR_FOUND_DURING_API_CALL = 'An Error Occurred: ';\n\nexport const DONT_HAVE_A_ACCOUNT_SIGNUP = 'Don\\'t have an account? Sign Up';\nexport const FORGOT_PASSWORD = 'Forgot password?';\nexport const REMEMBER_ME = 'Remember me';\n\n// Dashboard\nexport const NO_RECORD_FOUND = 'No Record found';\n \n\n\n\n\n\n\n\n\n\n \n\n\n","import { Typography, Grid, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst GreetingHeader = ({ greeting, name }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n\n    <Grid container mb={2} direction={\"column\"} sx={{ paddingTop: { xs:\"32px\", sm:\"0\" }, paddingLeft: { xs:\"32px\", sm:\"0\"} }}>\n        <Grid item>\n            <Typography variant=\"h6\" color={colors.grey[100]}>\n                {greeting}\n            </Typography>\n        </Grid>\n        \n        <Grid item>\n            <Typography\n                variant=\"h3\"\n                color={colors.grey[100]}\n                fontWeight=\"bold\"\n                sx={{ m: \"0 0 5px 0\" }}\n            >\n                {name}\n            </Typography>\n        </Grid>\n\n    </Grid>\n\n  );\n};\n\nexport default GreetingHeader;\n","import { Box, Typography, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\n\nconst SectionHeader = ({\n  sectionHeading,\n  sectionIcon,\n}) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Grid\n          item\n          xs={12} sm={12} md={12} lg={12} xl={12} pb={10}\n          backgroundColor={\"rgba(255,255,255,0.6)\"}\n          opacity={5}\n          borderRadius= {2}\n          p={3}\n          alignItems={\"center\"}\n        >\n          <Grid container direction={\"row\"} alignItems={\"center\"} spacing={3}>\n            <Grid item>\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={sectionIcon} width={24} />\n              </Box>\n            </Grid>\n            <Grid\n              item\n              fontSize={20}\n              fontWeight={700}\n            >\n              {sectionHeading}\n              </Grid>\n          </Grid>\n\n        </Grid>\n  );\n};\n\nexport default SectionHeader;\n","import { Box, Typography } from \"@mui/material\";\nimport { NO_RECORD_FOUND } from \"../constants/Strings\";\nexport default function NoDataFound() {\n    return (\n        <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        >\n        <Typography variant=\"h6\" align=\"center\" mt={1} mb={4}>\n          {NO_RECORD_FOUND}\n        </Typography>\n      \n      </Box>\n    );\n  }\n\n  ","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { tokens } from \"../theme\";\nimport React from \"react\";\nimport { Box, Typography, useTheme } from \"@mui/material\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport { Link } from \"react-router-dom\";\nimport DebugLog from '../utils/DebugLog';\nimport NoDataFound from './NoDataFound';\n\nfunction createData(cycle, status, cutoff, payout, details) {\n    return { cycle, status, cutoff, payout, details};\n  }\n  \n  const rows = [\n    createData('Bi Weekly : 1st - 15th ', 'Need Approval', '20 Jan ‘24', '22 Jan ‘24', 'RM 1,000,000.00'),\n    createData('Weekly : 1st - 7th ', 'Scheduled', '20 Jan ‘24', '22 Jan ‘24', 'RM 100,000.00'),\n  ];\n  \n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (value, row) => `${row.firstName || ''} ${row.lastName || ''}`,\n    },\n  ];\n\n\n\nconst SimpleTable = ({\n    statusBG,\n    statusData,\n    data,\n    to,\n  }) => {\n\n    const theme = useTheme();\n    const colors = tokens(theme.palette.mode);\n\n    const [selectedRow, setSelectedRow] = React.useState({});\n    DebugLog({ selectedRow });\n    DebugLog(\"data====\"+data);\n    \n\n    if (!data || data.length === 0) {\n      return (\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12} borderRadius= {2} >\n        <TableContainer sx={{ borderRadius: \"0 0 8px 8px\"}}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                  <TableHead sx={{ background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" }}>\n                    <TableRow sx={{letterSpacing: \"1px\"  }}>\n                      <TableCell sx={{ paddingLeft: \"28px\" }} >Cycle</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Cut Off</TableCell>\n                      <TableCell>Pay Out By</TableCell>\n                      <TableCell align=\"right\" sx={{ paddingRight: \"28px\" }}>Details</TableCell>\n                    </TableRow>\n                  </TableHead>\n     \n       </Table>\n          </TableContainer>\n\n          <NoDataFound/>\n       </Grid>\n       \n      );\n    }\n  \n\n    return (\n\n<Grid item xs={12} sm={12} md={12} lg={12} xl={12} borderRadius= {2}>\n\n          <TableContainer sx={{ borderRadius: \"0 0 8px 8px\"}}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                  <TableHead sx={{ background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" }}>\n                    <TableRow sx={{letterSpacing: \"1px\"  }}>\n                      <TableCell sx={{ paddingLeft: \"28px\" }} >Cycle</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Cut Off</TableCell>\n                      <TableCell>Pay Out By</TableCell>\n                      <TableCell align=\"right\" sx={{ paddingRight: \"28px\" }}>Details</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody sx={{ background: \"rgba(255,255,255,1)\"}}>\n                    {data.map(payoutSummaryList => (\n                      <TableRow\n                        key={payoutSummaryList.id}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 }, textDecoration: 'none !important' }}\n                        component={Link} to=\"/payouts\"\n                      >\n                        <TableCell component=\"th\" scope=\"row\" sx={{ paddingLeft: \"28px\", fontSize:14, fontWeight: 600 }}>\n                          {payoutSummaryList.cycle}\n                         \n                        </TableCell>\n                        <TableCell \n                            sx={{ color:statusBG, fontWeight: 700, fontSize:13 }}\n                        >\n                            <Grid container direction={\"row\"} alignItems={\"center\"} spacing={1.5}>\n                                <Grid item>\n                                    <Box width={6} height={6} borderRadius={6} backgroundColor={statusBG}\n                                      sx={{ display: { xs:\"none\", sm:\"flex\"} }}\n                                    ></Box>\n                                </Grid>\n                                <Grid item>\n                                {payoutSummaryList.status}\n                                </Grid>\n                            </Grid>\n                            \n                        </TableCell>\n                        <TableCell>{payoutSummaryList.cutOff}</TableCell>\n                        <TableCell>{payoutSummaryList.payoutBy}</TableCell>\n                        <TableCell align=\"right\" sx={{ paddingRight: \"28px\", fontSize:15, fontWeight: 900 }}>{payoutSummaryList.details}</TableCell>\n             \n              \n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n          </TableContainer>\n\n        </Grid>\n\n);\n};\n\nexport default SimpleTable;","import { Box, Button, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport SimpleTable from \"../../components/SimpleTable\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport * as React from \"react\";\n\nconst ValidationScreen = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  \n\n  return (\n    /* Main Container */\n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Validations\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Validations-black.svg\"}\n          sectionHeading={\"Validations\"}\n        ></SectionHeader>\n\n        <SimpleTable\n          statusData={\"In Validation\"}\n          statusBG={colors.primary[300]}\n        ></SimpleTable>\n\n      </Grid>\n      {/* Validations Section */}\n\n\n    </Grid>\n    /* Main Container */\n  );\n};\n\nexport default ValidationScreen;\n\n","import * as React from \"react\";\nimport { useEffect, useState } from 'react';\n\n\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\nimport { Box, IconButton, Typography, useTheme, Icon } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\n// import { styled } from '@mui/material/styles';\nimport { tokens } from \"../../theme\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport ContactsOutlinedIcon from \"@mui/icons-material/ContactsOutlined\";\nimport ReceiptOutlinedIcon from \"@mui/icons-material/ReceiptOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport CalendarTodayOutlinedIcon from \"@mui/icons-material/CalendarTodayOutlined\";\nimport HelpOutlineOutlinedIcon from \"@mui/icons-material/HelpOutlineOutlined\";\nimport BarChartOutlinedIcon from \"@mui/icons-material/BarChartOutlined\";\nimport PieChartOutlineOutlinedIcon from \"@mui/icons-material/PieChartOutlineOutlined\";\nimport TimelineOutlinedIcon from \"@mui/icons-material/TimelineOutlined\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport MapOutlinedIcon from \"@mui/icons-material/MapOutlined\";\nimport { collapseMenu, isAuthPageAtom, openSlidingMenu } from \"../../config/AppConfig\";\nimport { useAtom } from \"jotai\";\nimport { BackButtonListener } from \"../../components/BackButtonListener\";\nimport { ADJUSTMENT_ROUTE, CREDIT_DEBIT_ROUTE, EARMARK_ROUTE, EXCLUSION_ROUTE, FINANCE_DASHBOARD, FREEZE_ACCOUNT_ROUTE, ON_HOLD_ROUTE, PAYOUT_DATES_ROUTE, PAYOUT_ROUTE, REPORTS_ROUTE, VALIDATION_ROUTE, WITHOLDING_TAX_ROUTE } from \"../../constants/Constant\";\n\n/* NEW ICONS */\n\n// import SpaceDashboardOutlinedIcon from '@mui/icons-material/SpaceDashboardOutlined';\nimport OtherHousesOutlinedIcon from '@mui/icons-material/OtherHousesOutlined';\nimport GppMaybeOutlinedIcon from '@mui/icons-material/GppMaybeOutlined';\nimport CurrencyExchangeOutlinedIcon from '@mui/icons-material/CurrencyExchangeOutlined';\nimport PauseOutlinedIcon from '@mui/icons-material/PauseOutlined';\nimport DoNotDisturbAltOutlinedIcon from '@mui/icons-material/DoNotDisturbAltOutlined';\nimport PersonRemoveOutlinedIcon from '@mui/icons-material/PersonRemoveOutlined';\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\nimport CalculateOutlinedIcon from '@mui/icons-material/CalculateOutlined';\nimport AcUnitOutlinedIcon from '@mui/icons-material/AcUnitOutlined';\nimport PercentOutlinedIcon from '@mui/icons-material/PercentOutlined';\n\n\nimport { useContext } from 'react';\nimport { SidebarContext } from '../../scenes/global/context/sidebarContext.jsx';\nimport { ADJUSTMENT, CREDIT_DEBIT, DASHBOARD, EARMARK, EXCLUSION, FREEZE_ACCOUNT, ON_HOLD, PAYOUT, PAYOUT_DATES, REPORTS, VALIDATIONS, WITHOLDING_TAX } from \"../../constants/Strings.jsx\";\nimport ValidationScreen from \"../validations/index.jsx\";\n\nconst Item = ({ title, to, icon, selected, setSelected }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n\n  return (\n    <MenuItem\n      active={selected === title}\n      style={{\n        color: colors.grey[200],\n        // fontFamily: 'Montserrat Bold',\n        // fontWeight: \"900\"\n        \n      }}\n      onClick={\n        () => setSelected(title)\n      }\n      icon={icon}\n    >\n      <Typography\n        sx={{\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n        }}\n      \n      >{title}</Typography>\n      <Link to={to} />\n    </MenuItem>\n  );\n};\n\nconst Sidebar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [isCollapsed, setIsCollapsed] = useAtom(collapseMenu);\n  //const [isVisible, setIsVisible] = useAtom(false);\n\n  const [selected, setSelected] = useState(\"Dashboard\");\n  const [isAuthPage, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [slidingMenuStatus, setSlidingMenu] = useAtom(openSlidingMenu)\n\n\n\n  // reducer and context listening\n  const [activeLinkIdx] = useState(3);\n  const [sidebarClass, setSidebarClass] = useState(\"\");\n  const { isSidebarOpen } = useContext(SidebarContext);\n\n  useEffect(() => {\n   // setIsVisible(openSlidingMenu)\n    //setSlidingMenu(openSlidingMenu);\n   // setIsCollapsed(openSlidingMenu)\n\n\n    if(isSidebarOpen){\n      setSidebarClass('sidebar-change');\n    } else {\n      setSidebarClass('');\n    }\n  }, [isSidebarOpen,openSlidingMenu,collapseMenu]);\n\n\n  return (\n    <div className={ `sidebar ${sidebarClass}` }>\n      {!isAuthPage ? (\n        <Box\n          alignItems={\"space-around\"}\n         // visibility={isVisible}\n          sx={{\n            \"& .pro-sidebar-inner\": {\n              background: `${colors.white[50]} !important`,\n              fontFamily: \"Montserrat-Bold\",\n            },\n            \"& .pro-icon-wrapper\": {\n              backgroundColor: \"transparent !important\",\n            },\n            \"& .pro-inner-item\": {\n              padding: \"5px 35px 5px 20px !important\",\n            },\n            \"& .pro-inner-item:hover, \": {\n              color: colors.redAccent[200] + \"!important\",\n              // fontFamily: \"Montserrat-Bold\",\n            },\n            \"& .pro-menu-item.active\": {\n              color: colors.redAccent[200] + \"!important\",\n              fontFamily: \"Montserrat-Bold\",\n              fontWeight: \"900 !important\",\n            },\n            //display: { xs: \"none\", sm: \"block\"},\n            //height: \"120vh\",\n            // position: \"fixed\",\n            zIndex: \"1000\",\n            // width: \"270px\",\n          }}\n        >\n          <BackButtonListener></BackButtonListener>\n          \n\n          <ProSidebar collapsed={isCollapsed} sx={{height:\"100vh\"}}>\n            <Menu iconShape=\"square\">\n              {/* LOGO AND MENU ICON */}\n              <MenuItem\n                onClick={() => setIsCollapsed(!isCollapsed)}\n                icon={isCollapsed ? <MenuOutlinedIcon /> : undefined}\n                style={{\n                  margin: \"10px 0 20px 0\",\n                  // color: colors.primary[200],\n                }}\n              >\n                {!isCollapsed && (\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    ml=\"15px\"\n                  >\n                    \n                    <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\n                      <MenuOutlinedIcon />\n                    </IconButton>\n                  </Box>\n                )}\n              </MenuItem>\n\n              {!isCollapsed && (\n                <Box mb=\"25px\">\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                  >\n                    <img src=\"../../assets/common/Logo.svg\" />\n                    {/* <img src=\"../../assets/common/Attention.svg\"/> */}\n                  </Box>\n                </Box>\n              )}\n\n              <Box pt={2} paddingLeft={isCollapsed ? undefined : \"10%\"}>\n                <Item\n                   title={DASHBOARD}\n                  to={FINANCE_DASHBOARD}\n                  icon={<OtherHousesOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                  sx={{ fontWeight: \"700\", m: 1 }}\n                />\n\n                {/* <Typography\n                  variant=\"h6\"\n                  color={colors.grey[300]}\n                  sx={{ m: \"15px 0 5px 20px\" }}\n                >\n                  Incentive\n                </Typography> */}\n                <Item\n                   title={VALIDATIONS}\n                  to={VALIDATION_ROUTE}\n                  icon={<GppMaybeOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n\n                <Item\n                    title={PAYOUT}\n                  to={PAYOUT_ROUTE}\n                  icon={<CurrencyExchangeOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                 title={ON_HOLD}\n                  to={ON_HOLD_ROUTE}\n                  icon={<PauseOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                 title={EXCLUSION}\n                  to={EXCLUSION_ROUTE}\n                  icon={<DoNotDisturbAltOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                {/* <Item\n                  title=\"Formulas\"\n                  to=\"/calendar\"\n                  icon={<CalendarTodayOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                /> */}\n                <Item\n                 title={PAYOUT_DATES}\n                  to={PAYOUT_DATES_ROUTE}\n                  icon={<CalendarTodayOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                 title={WITHOLDING_TAX}\n                  to={WITHOLDING_TAX_ROUTE}\n                  icon={<PersonRemoveOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                {/* <Typography\n                  variant=\"h6\"\n                  color={colors.grey[300]}\n                  sx={{ m: \"15px 0 5px 20px\" }}\n                >\n                  Reports\n                </Typography> */}\n\n                <Item\n                 title={REPORTS}\n                  to={REPORTS_ROUTE}\n                  icon={<ArticleOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n\n                <Item\n                    title={ADJUSTMENT}\n                  to={ADJUSTMENT_ROUTE}\n                  icon={<CalculateOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                   title={EARMARK}\n                  to={EARMARK_ROUTE}\n                  icon={<ContactsOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                   title={FREEZE_ACCOUNT}\n                  to={FREEZE_ACCOUNT_ROUTE}\n                  icon={<AcUnitOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n\n                {/* <Typography\n                  variant=\"h6\"\n                  color={colors.grey[300]}\n                  sx={{ m: \"15px 0 5px 20px\" }}\n                >\n                  Pages\n                </Typography> */}\n                <Item\n                  title={CREDIT_DEBIT}\n                  to={CREDIT_DEBIT_ROUTE}\n                  icon={<PercentOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                {/* <Item\n                  title=\"Calendar\"\n                  to=\"/calendar\"\n                  icon={<CalendarTodayOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                  title=\"FAQ Page\"\n                  to=\"/faq\"\n                  icon={<HelpOutlineOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n\n                <Typography\n                  variant=\"h6\"\n                  color={colors.grey[300]}\n                  sx={{ m: \"15px 0 5px 20px\" }}\n                >\n                  Charts\n                </Typography>\n                <Item\n                  title=\"Bar Chart\"\n                  to=\"/bar\"\n                  icon={<BarChartOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                  title=\"Pie Chart\"\n                  to=\"/pie\"\n                  icon={<PieChartOutlineOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                  title=\"Line Chart\"\n                  to=\"/line\"\n                  icon={<TimelineOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n                <Item\n                  title=\"Geography Chart\"\n                  to=\"/geography\"\n                  icon={<MapOutlinedIcon />}\n                  selected={selected}\n                  setSelected={setSelected}\n                /> */}\n              </Box>\n            </Menu>\n          </ProSidebar>\n        </Box>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// ConnectionStatus.js\nimport React, { useState, useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport \"./ConnectionStatus.css\"; // Import your CSS file for styling\n\nconst ConnectionStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      enqueueSnackbar(\"You are online\", {  autoHideDuration: 3000,variant: \"success\" });\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n      enqueueSnackbar(\"You are offline\", { autoHideDuration: 3000, variant: \"error\" });\n    };\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return (\n    <div>\n      {!isOnline ? (\n        <div className={`connection-status ${isOnline ? \"online\" : \"offline\"}`}>\n         <p className=\"connection-paragraph\">{isOnline ? \"ONLINE\" : \"No Internet Connection\"}</p> \n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n\n    // <div>\n    //   {isOnline ? (\n    //     <p>You are online</p>\n    //   ) : (\n    //     <p>You are offline</p>\n    //   )}\n    // </div>\n  );\n};\n\nexport default ConnectionStatus;\n","import { useState, useEffect } from 'react';\n\nconst UseOnlineStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return isOnline;\n};\n\nexport default UseOnlineStatus;\n","export const BASIC_AUTH_TOKKEN = 'basicAuthToken';\nexport const MESSAGE_KEY = 'messageKey';\nexport const SESSION_ID = 'sessionId';\nexport const LOGIN_ID = 'loginId';\nexport const USER_ID = 'userId';\n\n\n\n\n\n","// localStorageUtils.js\n\nimport { BASIC_AUTH_TOKKEN, MESSAGE_KEY, SESSION_ID } from \"../constants/LocalStorageKeyValuePairString\";\nimport DebugLog from \"./DebugLog\";\n\n// Function to save data to local storage\nexport const saveToLocalStorage = (key, data) => {\n    try {\n      localStorage.setItem(key, data);\n      DebugLog(\"saved \"+key+\" to local storage-=====\"+data)\n    } catch (error) {\n      console.error('Error saving '+key+' to localStorage:', error);\n    }\n  };\n  export const saveToLocalStorageJsonObject = (key, data) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n      DebugLog(\"saved \"+key+\" to local storage=====\"+JSON.stringify(data))\n    } catch (error) {\n      console.error('Error saving '+key+' to localStorage:', error);\n    }\n  };\n  \n  // Function to retrieve data from local storage\n  export const getFromLocalStorageJsonObject = (key) => {\n    try {\n      const data = localStorage.getItem(key);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Error fetching '+key+' from localStorage:', error);\n      return null;\n    }\n  };\n\n   // Function to retrieve data from local storage\n   export const getFromLocalStorage = (key) => {\n    try {\n      const data = localStorage.getItem(key);\n      return data ? data : null;\n    } catch (error) {\n      console.error('Error fetching '+key+' from localStorage:', error);\n      return null;\n    }\n  };\n\n  export const deleteAllKeyFromLocalStorage = () => {\n    const allKeys = [BASIC_AUTH_TOKKEN, MESSAGE_KEY, SESSION_ID];\n    allKeys.forEach(item => {\n      deleteLocalStorageKey(item)\n    });\n    \n  }\n\n\n   const deleteLocalStorageKey = (keyToDelete) => {\n    try {\n      localStorage.removeItem(keyToDelete);\n    } catch (error) {\n      console.error('Error while deleting '+keyToDelete+' key:', error);\n    }\n  };\n  ","import React, { useEffect, useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\n\nconst CustomProgressDialog = ({open, text }) => {\n//const CustomProgressDialog = ({ open }) => {\n  // State to manage the visibility of the dialog\n  const [dialogOpen, setDialogOpen] = useState(open);\n\n  useEffect(() => {\n    setDialogOpen(open);\n  }, [open]);\n\n\n  // Function to handle closing the dialog\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n// Prevent clicks on the progress indicator itself from affecting the loading state\nconst handleProgressClick = (event) => {\n  event.stopPropagation();\n};\n  return (\n    <div  onClick={handleProgressClick}>\n    <Dialog open={dialogOpen} onClose={handleClose}>\n      <DialogContent>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }} \n     >\n      <CircularProgress />\n      <Typography variant=\"body1\" component=\"div\" color=\"textSecondary\" style={{ marginTop: 10 }}>\n        {text}\n      </Typography>\n    </div>\n      </DialogContent>\n    </Dialog>\n    </div>\n  );\n};\n\nexport default CustomProgressDialog;","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { atom, useAtom } from \"jotai\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { showErrorAlertDialog } from '../config/AppConfig';\nimport Typography from '@mui/material/Typography';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst ShowErrorAlertDialog = ({status, title, content}) => {\n//export default function ShowErrorAlertDialog(status, title ,content) {\n  const [open, setOpen] = useState(status);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  \n  useEffect(() => {\n    setOpen(status);\n  }, [status]);\n\n\n  const handleClose = () => {\n    setErrorDialog(false)\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = (event) => {\n    setMaxWidth(\n      // @ts-expect-error autofill of arbitrary value is not handled.\n      event.target.value,\n    );\n  };\n\n  const handleFullWidthChange = (event) => {\n    setFullWidth(event.target.checked);\n  };\n\n\n  return (\n    <React.Fragment>\n    \n      <Dialog\n       fullWidth={fullWidth}\n       maxWidth={maxWidth}\n        open={open} onClose={handleClose}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle> <Typography variant=\"h6\" component=\"div\" color=\"textPrimary\" style={{ marginTop: 10 }}>\n        {title}\n      </Typography></DialogTitle>\n        <DialogContent>\n        <Typography variant=\"body1\" component=\"div\" color=\"textSecondary\" style={{ marginTop: 10 }}>\n        {content}\n      </Typography>\n          {/* <DialogContentText id=\"alert-dialog-slide-description\">\n            {content}\n          </DialogContentText> */}\n        </DialogContent>\n        <DialogActions>\n          {/* <Button onClick={handleClose}>Disagree</Button> */}\n          <Button onClick={handleClose}>ok</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default ShowErrorAlertDialog;","import DebugLog from \"../utils/DebugLog\";\n\n export async function initializeEncryption(data,keyBase64,apiTag) {\n  DebugLog(apiTag+\"----Plain Request data---   \"+JSON.stringify(data));\n\n  // this code use AES ECB mode\n  return await  encryptWithAesEcb(keyBase64, JSON.stringify(data))\n  .then((encryptedData) => {\n            DebugLog(apiTag+\"----Encrypted Content Data---   \"+encryptedData);\n            return encryptedData\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n   \n   }\n\n// below code is for AES-GCM Encryption , \n//  return await  encryptData(keyBase64, JSON.stringify(signInData), rawIv)\n//       .then((encryptedData) => {\n//         console.log(\"encrypted login data-------   \"+encryptedData);\n//         return encryptedData\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   }\n\n async function encryptWithAesEcb(keyBase64, data ){\n \n  const CryptoJS = require(\"crypto-js\");\n  const encrypted = CryptoJS.AES.encrypt(data, keyBase64).toString();\n    return encrypted;\n // return btoa(String.fromCharCode(...encryptedBytes));\n }\n\n  \n\n  async function encryptData(keyBase64, data, ivBase64) {\n    const algorithm = { name: \"AES-GCM\", length: 128 };\n  \n    const keyBuffer = convertStringIntoBase64ToUint8Array(keyBase64);\n    // Import key\n    const key = await window.crypto.subtle.importKey(\n        \"raw\",\n        keyBuffer,\n       // { name: \"AES-GCM\" },\n       algorithm,\n        false,\n        [\"encrypt\"]\n    );\n\n    const iv = convertStringIntoBase64ToUint8Array(ivBase64)\n\n    // Convert data to ArrayBuffer\n    const dataBuffer = new TextEncoder().encode(data);\n\n    // Encrypt data\n    const encryptedData = await window.crypto.subtle.encrypt(\n        { name: \"AES-GCM\", iv },\n        key,\n        dataBuffer\n    );\n\n    // Encode the encrypted data to Base64\n    const encryptedBytes = new Uint8Array(encryptedData);\n    return btoa(String.fromCharCode(...encryptedBytes));\n  }\n\n  function convertStringIntoBase64ToUint8Array(base64String) {\n    const binaryString = atob(base64String);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n  }\n\n  // Function to decrypt data using AES-GCM\n  async function decryptData(encryptedData, keyRaw) {\n    \n    const keyArrayBuffer = convertStringIntoBase64ToUint8Array(keyRaw);\n\n    // Import key\n    const key = await window.crypto.subtle.importKey(\n      \"raw\",\n      keyArrayBuffer,\n      { name: \"AES-GCM\" },\n      //algorithm,\n      false,\n      [\"decrypt\"]\n    );\n\n    const iV = convertStringIntoBase64ToUint8Array(process.env.REACT_APP_ENCRYPTION_IV);\n\n    const decryptedData = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iV,\n      },\n      key,\n      encryptedData.ciphertext\n    );\n\n    return new TextDecoder().decode(decryptedData);\n  }\n","// Function to generate a random request ID\nexport const generateRequestId = () => {\n    const timestamp = new Date().getTime();\n    const random = Math.floor(Math.random() * 1000000);\n    return `${timestamp}-${random}`;\n  };","export const ApiType = {\n    SIGN_IN: 'signIn',\n    GET_PAYOUT_DETAILS: 'getPayoutDetail',\n    GET_PAYOUT_SUMMARY: 'getPayoutSummary',\n    ON_HOLD_DETAILS: 'onHoldDetails',\n    ON_HOLD_SUMMARY: 'onHoldSummary',\n  };","let config;\n\nif (process.env.NODE_ENV === 'production') {\n  config = require('./env.production').default;\n} else {\n  config = require('./env.development').default;\n}\n\nexport default config;","import axios from 'axios';\nimport config from \"./configration/config\";\nimport { APPLICATION_JSON } from \"../constants/Constant\";\n\nconst baseUrl = config.apiBaseUrl;\n\n\n\nexport const axiosInstance = axios.create({\n  //baseURL: \"https://cors-anywhere.herokuapp.com/\" + baseUrl, // proxy server path attached TO BYPASS CORS\n  baseURL: baseUrl,  // IF API DO NOT HAVE CORS ISSUE\n  timeout: 20000,\n  headers: {\n    \"Content-Type\": APPLICATION_JSON,\n  },\n});\n\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(\n  function (config) {\n    // Do something before request is sent\n    console.log('Request sent:', config);\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(\n  function (response) {\n    // Do something with response data\n    console.log('Response received:', response);\n    return response;\n  },\n  function (error) {\n    // Do something with response error\n    console.error('Response error:', error);\n    return Promise.reject(error);\n  }\n);\n\n\n\n// Remove the interceptors when no longer needed (e.g., when component unmounts)\n//instance.interceptors.request.eject(requestInterceptor);\n//instance.interceptors.response.eject(responseInterceptor);\n","import { generateBasicAuthHeader } from \"./BasicAuthHashing\";\nimport {  AUTHORIZATION } from \"../constants/Constant\";\nimport DebugLog from \"../utils/DebugLog\";\nimport { axiosInstance } from \"./AxiosIntercepter\";\n\n\n// get Basic auth\nexport const getBasicAuth = (includeAuthorizationHeader) => {\n  let headers = {};\n  if (includeAuthorizationHeader) {\n    const headerTokken = generateBasicAuthHeader();\n    const authToken = \"BASIC \" + headerTokken;\n    //const authToken = \"BASIC \" + \"eW1jYXVzZXI6MnhKeHp3RUdzaDNTNFF2RUMvZWRwZz09\"\n    DebugLog(\"authToken====\" + authToken);\n    headers[AUTHORIZATION] = authToken;\n  }\n  return axiosInstance.get(process.env.REACT_APP_BASIC_AUTH_API_URL, { headers });\n};\n\n// get user login details\nexport const getUserLoginDetails = (reqestParams) => {\n  return axiosInstance.post(process.env.REACT_APP_LOGIN_API_URL, reqestParams);\n};\n\n// create dummy user\nexport const createUser = (reqestParams) => {\n  return axiosInstance.post(\"/users\", reqestParams);\n};\n\n// get payout details\nexport const getPayoutDetails = (reqestParams) => {\n  return axiosInstance.post(process.env.REACT_APP_PAYOUT_DETAILS_API_URL, reqestParams);\n};\n\n// get payout summary \nexport const getPayoutSummary = (reqestParams) => {\n  return axiosInstance.post(process.env.REACT_APP_PAYOUT_SUMMARY_API_URL, reqestParams);\n};\n\n// get on-hold summary \nexport const getOnHoldDetails = (reqestParams) => {\n  return axiosInstance.post(process.env.REACT_APP_ON_HOLD_DETAILS_API_URL, reqestParams);\n};\n\n// get on-hold details \nexport const getOnHoldSummary = (reqestParams) => {\n  return axiosInstance.post(process.env.REACT_APP_ON_HOLD_SUMMARY_API_URL, reqestParams);\n};\n\n","import { tokens } from \"../../theme\";\nimport * as React from \"react\";\n\nimport { Box, Button, IconButton, Typography,useTheme } from \"@mui/material\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport Divider from \"@mui/material/Divider\";\n\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  deleteAllKeyFromLocalStorage,\n  saveToLocalStorageJsonObject,\n} from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { atom, useAtom } from \"jotai\";\nimport {\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  AUTHENTICATING_PLEASE_WAIT,\n  DONT_HAVE_A_ACCOUNT_SIGNUP,\n  ERROR,\n  ERROR_WHILE_AUTHENTICATING_USER,\n  ERROR_WHILE_FETCHING_PAYOUT_DETAILS,\n  ERROR_WHILE_RETRIEVING_BASIC_AUTH,\n  FETCHING_PAYOUT_DETAILS_PLEASE_WAIT,\n  FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT,\n  FORGOT_PASSWORD,\n  LOADING_CONFIGRATION_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  REMEMBER_ME,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport { initializeEncryption } from \"../../services/AesGcmEncryption\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  MESSAGE_KEY,\n  SESSION_ID,\n  USER_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../services/ApiTags\";\nimport {\n  getBasicAuth,\n  getPayoutDetails,\n  getPayoutSummary,\n  getUserLoginDetails,\n} from \"../../services/ApiService\";\n\nimport * as CONSTANT from \"../../constants/Constant\";\nimport SimpleTable from \"../../components/SimpleTable\";\n\nconst PayoutsArchive = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const navigate = useNavigate();\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [payoutSummary, setPayoutSummary] = useState([]);\n\n  useEffect(() => {\n\n    // get Payout details\n    //getPayoutDetail();\n\n    getPayoutSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n\n  }, [isNetworkConnectionAvailable, enqueueSnackbar]);\n\n\n\n  function blockNavigation (location, action)  {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === 'pop' ) {\n      // Optionally, you can show a message to the user before blocking navigation\n       alert('Back button is disabled.');\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  };\n\nasync function getPayoutSummaryData() {\n  try {\n    if (isNetworkConnectionAvailable) {\n    \n        setProgressbarText(FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const id = \"1\";\n        const pageNumber = 1;\n        const pageSize = 10;\n\n        const payoutDetails = {\n          id: id,\n          pageNumber: pageNumber,\n          pageSize: pageSize,\n        };\n\n        initializeEncryption(\n          payoutDetails,\n          getFromLocalStorage(MESSAGE_KEY),\n          ApiType.GET_PAYOUT_SUMMARY\n        ).then((encryptedContentData) => {\n         \n          const payoutSummaryRequestData = {\n            requestId: generateRequestId(),\n            loginId: getFromLocalStorage(LOGIN_ID),\n            sessionId: getFromLocalStorage(SESSION_ID),\n            //contentData: encryptedContentData,\n          };\n\n        \n          getPayoutSummary(payoutSummaryRequestData)\n            .then((response) => {\n            \n              setPayoutSummary(response.data.result.payoutSummaryList)\n              setLoading(false);\n            })\n            .catch((error) => {\n              const message =\n                error.response != null ? error.response : error.message;\n              showErrorAlert(\n                error.message,\n                ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n              );\n            });\n        });\n      \n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  } catch (error) {\n    const message = error.response != null ? error.response : error.message;\n    showErrorAlert(\n      error.message,\n      ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n    );\n  }\n}\n\nasync function getPayoutDetail() {\n    try {\n      if (isNetworkConnectionAvailable) {\n      \n          setProgressbarText(FETCHING_PAYOUT_DETAILS_PLEASE_WAIT);\n          setLoading(true); // Hide the progress dialog\n\n          const id = \"1\";\n          const pageNumber = 1;\n          const pageSize = 10;\n\n          const payoutDetails = {\n            id: id,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n          };\n\n          initializeEncryption(\n            payoutDetails,\n            getFromLocalStorage(MESSAGE_KEY),\n            ApiType.GET_PAYOUT_DETAILS\n          ).then((encryptedContentData) => {\n            const payoutDetailsRequestData = {\n              requestId: generateRequestId(),\n              loginId: getFromLocalStorage(LOGIN_ID),\n              sessionId: getFromLocalStorage(SESSION_ID),\n              contentData: encryptedContentData,\n            };\n\n          \n            getPayoutDetails(payoutDetailsRequestData)\n              .then((response) => {\n                DebugLog(\n                  \"getPayoutDetails response.data=====\" +\n                    JSON.stringify(response.data)\n                );\n\n                setLoading(false);\n              })\n              .catch((error) => {\n                const message =\n                  error.response != null ? error.response : error.message;\n                showErrorAlert(\n                  error.message,\n                  ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n                );\n              });\n          });\n        \n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n      );\n    }\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"error.data=====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n     /* Main Container */\n    <Box>\n    <SnackbarProvider maxSnack={3}>\n    <ConnectionStatus />\n    <ShowErrorAlertDialog\n      status={getDialogStatus}\n      title={title}\n      content={content}\n    />\n    {isNetworkConnectionAvailable ? (\n      <CustomProgressDialog open={loading} text={getProgressbarText} />\n    ) : (\n      showNoInternetSnackBar()\n    )}\n   \n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Payouts\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        pb={12}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n\n        <SimpleTable\n          statusData={\"In Validation\"}\n          statusBG={colors.primary[300]}\n          data={payoutSummary}\n        ></SimpleTable>\n\n      </Grid>\n      {/* Validations Section */}\n\n\n    </Grid>\n   \n\n    </SnackbarProvider>\n    </Box>\n     /* Main Container */\n  );\n};\n\nexport default PayoutsArchive;\n\n","\nexport const onHoldSummaryColumnHeader = [\n   \n    {\n      field: \"name\",\n      headerName: \"NAME\",\n      flex: 1.5,\n      cellClassName: \"bold-column--cell\",\n      headerAlign: 'left',\n    },\n    {\n      field: \"code\",\n      flex: 1,\n      headerName: \"CODE\",\n      headerAlign: \"left\",\n    },\n    {\n      field: \"startDate\",\n      headerName: \"START DATE\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"endDate\",\n      headerName: \"END DATE\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n        field: \"vendor\",\n        headerName: \"VENDOR\",\n        flex: 1,\n        headerAlign: 'left',\n      },\n      {\n        field: \"invoice\",\n        headerName: \"INVOICE\",\n        flex: 1,\n        headerAlign: 'left',\n      },\n    {\n      field: \"payout\",\n      headerName: \"PAYOUT\",\n      flex: 1,\n      headerAlign: 'left',\n      cellClassName: \"bold-column--cell\",\n    }\n  ];\n\n\n\n\nexport const payoutSummaryColumnHeader = [\n   \n  {\n    field: \"id\",\n    headerName: \"ID\",\n    flex: .5,\n    \n    headerAlign: 'left',\n  },\n  {\n    field: \"cycle\",\n    flex: 1,\n    headerName: \"CYCLE\",\n    headerAlign: \"left\",\n    cellClassName: \"bold-column--cell\",\n   \n  },\n  {\n    field: \"status\",\n    headerName: \"STATUS\",\n    flex: 1,\n    headerAlign: 'left',\n    cellClassName: \"name-column--cell\",\n  },\n  {\n    field: \"cutOff\",\n    headerName: \"CUT OFF\",\n    flex: 1,\n    headerAlign: 'left',\n  },\n  {\n      field: \"payoutBy\",\n      headerName: \"PAY OUT BY\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"details\",\n      headerName: \"DETAILS\",\n      flex: 1,\n      headerAlign: 'left',\n      cellClassName: \"bold-column--cell\",\n    }\n];\n\n\n\n\n\n\n\n\n\n\n\n\nexport const sampleColumnHeader = [\n    { field: \"id\", headerName: \"ID\", flex: .5 , headerAlign: 'left', cellClassName: 'super-app-theme--cell'},\n    { field: \"registrarId\", headerName: \"REGISTER ID\",flex: 1 , headerAlign: 'left',  AlignVerticalCenter: true, },\n    {\n      field: \"name\",\n      headerName: \"NAME\",\n      flex: 1,\n      cellClassName: \"name-column--cell\",\n      headerAlign: 'left',\n    },\n    {\n      field: \"age\",\n      flex: .5,\n      headerName: \"AGE\",\n      type: \"number\",\n      headerAlign: \"left\",\n      align: \"left\",\n      headerAlign: 'left',\n    },\n    {\n      field: \"phone\",\n      headerName: \"PHONE NUMBER\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"email\",\n      headerName: \"EMAIL\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"address\",\n      headerName: \"ADDRESS\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"city\",\n      headerName: \"CITY\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"zipCode\",\n      headerName: \"ZIPCODE\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n  ];","import { tokens } from \"../theme\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport { Box, Button, useTheme } from \"@mui/material\";\n\n\nconst CustomButton = ({\n    btnBG,\n    btnColor,\n    btnTxt,\n    btnStartIcon,\n    btnEndIcon\n}\n) => {\n\n    const theme = useTheme();\n    const colors = tokens(theme.palette.mode);\n\n    return (\n        <Grid\n        sx={{\n            \".customBtn\": {\n            backgroundColor: btnBG,\n            color: btnColor,\n            borderRadius: \"24px\",\n            boxShadow: \"0px 12px 24px 0px rgba(0, 0, 0, 0.08)\",\n            fontSize: \"12px\",\n            fontWeight: \"700\",\n            letterSpacing: \"1.25px\",\n            padding: \"8px 24px\",\n            },\n            \"& .customBtn:hover\": {\n                backgroundColor: btnBG,\n                boxShadow: \"0px 12px 24px 0px rgba(0, 0, 0, 0.15)\",\n            }\n        }}\n        >\n            <Button\n            className=\"customBtn\"\n            variant=\"contained\"\n            startIcon= {btnStartIcon}\n            endIcon= {btnEndIcon}\n            >\n            {btnTxt}\n            </Button>\n        </Grid>    \n    );\n\n};\n\nexport default CustomButton;","import { tokens } from \"../../theme\";\nimport * as React from \"react\";\n\nimport { Box, Button, IconButton, Typography,useTheme } from \"@mui/material\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\n\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  deleteAllKeyFromLocalStorage,\n  saveToLocalStorageJsonObject,\n} from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { atom, useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  AUTHENTICATING_PLEASE_WAIT,\n  DONT_HAVE_A_ACCOUNT_SIGNUP,\n  ERROR,\n  ERROR_WHILE_AUTHENTICATING_USER,\n  ERROR_WHILE_FETCHING_PAYOUT_DETAILS,\n  ERROR_WHILE_RETRIEVING_BASIC_AUTH,\n  FETCHING_PAYOUT_DETAILS_PLEASE_WAIT,\n  FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT,\n  FORGOT_PASSWORD,\n  LOADING_CONFIGRATION_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  REMEMBER_ME,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport { initializeEncryption } from \"../../services/AesGcmEncryption\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  MESSAGE_KEY,\n  SESSION_ID,\n  USER_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../services/ApiTags\";\nimport {\n  getBasicAuth,\n  getPayoutDetails,\n  getPayoutSummary,\n  getUserLoginDetails,\n} from \"../../services/ApiService\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\n\n\nimport * as CONSTANT from \"../../constants/Constant\";\nimport SimpleTable from \"../../components/SimpleTable\";\nimport { payoutSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\nimport CustomButton from \"../../components/CustomButton\";\n\nconst Payouts = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const navigate = useNavigate();\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [payoutSummary, setPayoutSummary] = useState([]);\n\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = payoutSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    // get Payout details\n    //getPayoutDetail();\n\n    getPayoutSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n\n  }, [isNetworkConnectionAvailable, enqueueSnackbar,totalNoOfRows]);\n\n\n\n  function blockNavigation (location, action)  {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === 'pop' ) {\n      // Optionally, you can show a message to the user before blocking navigation\n       alert('Back button is disabled.');\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  };\n\nasync function getPayoutSummaryData() {\n  try {\n    if (isNetworkConnectionAvailable) {\n    \n        setProgressbarText(FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const id = \"1\";\n        const pageNumber = 1;\n        const pageSize = 10;\n\n        const payoutDetails = {\n          id: id,\n          pageNumber: pageNumber,\n          pageSize: pageSize,\n        };\n\n        initializeEncryption(\n          payoutDetails,\n          getFromLocalStorage(MESSAGE_KEY),\n          ApiType.GET_PAYOUT_SUMMARY\n        ).then((encryptedContentData) => {\n         \n          const payoutSummaryRequestData = {\n            requestId: generateRequestId(),\n            loginId: getFromLocalStorage(LOGIN_ID),\n            sessionId: getFromLocalStorage(SESSION_ID),\n            //contentData: encryptedContentData,\n          };\n\n        \n          getPayoutSummary(payoutSummaryRequestData)\n            .then((response) => {\n            \n              setPayoutSummary(response.data.result.payoutSummaryList)\n              setTotalNoOfRows(response.data.result.payoutSummaryList.length);\n              setLoading(false);\n            })\n            .catch((error) => {\n              const message =\n                error.response != null ? error.response : error.message;\n              showErrorAlert(\n                error.message,\n                ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n              );\n            });\n        });\n      \n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  } catch (error) {\n    const message = error.response != null ? error.response : error.message;\n    showErrorAlert(\n      error.message,\n      ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n    );\n  }\n}\n\nasync function getPayoutDetail() {\n    try {\n      if (isNetworkConnectionAvailable) {\n      \n          setProgressbarText(FETCHING_PAYOUT_DETAILS_PLEASE_WAIT);\n          setLoading(true); // Hide the progress dialog\n\n          const id = \"1\";\n          const pageNumber = 1;\n          const pageSize = 10;\n\n          const payoutDetails = {\n            id: id,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n          };\n\n          initializeEncryption(\n            payoutDetails,\n            getFromLocalStorage(MESSAGE_KEY),\n            ApiType.GET_PAYOUT_DETAILS\n          ).then((encryptedContentData) => {\n            const payoutDetailsRequestData = {\n              requestId: generateRequestId(),\n              loginId: getFromLocalStorage(LOGIN_ID),\n              sessionId: getFromLocalStorage(SESSION_ID),\n              contentData: encryptedContentData,\n            };\n\n          \n            getPayoutDetails(payoutDetailsRequestData)\n              .then((response) => {\n                DebugLog(\n                  \"getPayoutDetails response.data=====\" +\n                    JSON.stringify(response.data)\n                );\n\n                setLoading(false);\n              })\n              .catch((error) => {\n                const message =\n                  error.response != null ? error.response : error.message;\n                showErrorAlert(\n                  error.message,\n                  ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n                );\n              });\n          });\n        \n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n      );\n    }\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"error.data=====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n     /* Main Container */\n    <Box>\n    <SnackbarProvider maxSnack={3}>\n    <ConnectionStatus />\n    <ShowErrorAlertDialog\n      status={getDialogStatus}\n      title={title}\n      content={content}\n    />\n    {isNetworkConnectionAvailable ? (\n      <CustomProgressDialog open={loading} text={getProgressbarText} />\n    ) : (\n      showNoInternetSnackBar()\n    )}\n   \n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Payouts\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        pb={2}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n\n{payoutSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={payoutSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n\n        {/* <SimpleTable\n          statusData={\"In Validation\"}\n          statusBG={colors.primary[300]}\n          data={payoutSummary}\n        ></SimpleTable> */}\n\n      </Grid>\n      {/* Validations Section */}\n\n      {payoutSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n    </Grid>\n\n      {/* Action Buttons */}\n\n      {payoutSummary.length > 0 ? (\n          <Grid item mt={1}  mr={10}   justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              {/* <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton> */}\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n       \n    </SnackbarProvider>\n    </Box>\n     /* Main Container */\n  );\n};\n\nexport default Payouts;\n\n","import { tokens } from \"../theme\";\n\nexport const mockDataTeam = [\n  {\n    id: 1,\n    name: \"Jon Snow\",\n    email: \"jonsnow@gmail.com\",\n    age: 35,\n    phone: \"(665)121-5454\",\n    access: \"admin\",\n  },\n  {\n    id: 2,\n    name: \"Cersei Lannister\",\n    email: \"cerseilannister@gmail.com\",\n    age: 42,\n    phone: \"(421)314-2288\",\n    access: \"manager\",\n  },\n  {\n    id: 3,\n    name: \"Jaime Lannister\",\n    email: \"jaimelannister@gmail.com\",\n    age: 45,\n    phone: \"(422)982-6739\",\n    access: \"user\",\n  },\n  {\n    id: 4,\n    name: \"Anya Stark\",\n    email: \"anyastark@gmail.com\",\n    age: 16,\n    phone: \"(921)425-6742\",\n    access: \"admin\",\n  },\n  {\n    id: 5,\n    name: \"Daenerys Targaryen\",\n    email: \"daenerystargaryen@gmail.com\",\n    age: 31,\n    phone: \"(421)445-1189\",\n    access: \"user\",\n  },\n  {\n    id: 6,\n    name: \"Ever Melisandre\",\n    email: \"evermelisandre@gmail.com\",\n    age: 150,\n    phone: \"(232)545-6483\",\n    access: \"manager\",\n  },\n  {\n    id: 7,\n    name: \"Ferrara Clifford\",\n    email: \"ferraraclifford@gmail.com\",\n    age: 44,\n    phone: \"(543)124-0123\",\n    access: \"user\",\n  },\n  {\n    id: 8,\n    name: \"Rossini Frances\",\n    email: \"rossinifrances@gmail.com\",\n    age: 36,\n    phone: \"(222)444-5555\",\n    access: \"user\",\n  },\n  {\n    id: 9,\n    name: \"Harvey Roxie\",\n    email: \"harveyroxie@gmail.com\",\n    age: 65,\n    phone: \"(444)555-6239\",\n    access: \"admin\",\n  },\n];\n\nexport const mockDataContacts = [\n  {\n    id: 1,\n    name: \"Jon Snow\",\n    email: \"jonsnow@gmail.com\",\n    age: 35,\n    phone: \"(665)121-5454\",\n    address: \"0912 Won Street, Alabama, SY 10001\",\n    city: \"New York\",\n    zipCode: \"10001\",\n    registrarId: 123512,\n  },\n  {\n    id: 2,\n    name: \"Cersei Lannister\",\n    email: \"cerseilannister@gmail.com\",\n    age: 42,\n    phone: \"(421)314-2288\",\n    address: \"1234 Main Street, New York, NY 10001\",\n    city: \"New York\",\n    zipCode: \"13151\",\n    registrarId: 123512,\n  },\n  {\n    id: 3,\n    name: \"Jaime Lannister\",\n    email: \"jaimelannister@gmail.com\",\n    age: 45,\n    phone: \"(422)982-6739\",\n    address: \"3333 Want Blvd, Estanza, NAY 42125\",\n    city: \"New York\",\n    zipCode: \"87281\",\n    registrarId: 4132513,\n  },\n  {\n    id: 4,\n    name: \"Anya Stark\",\n    email: \"anyastark@gmail.com\",\n    age: 16,\n    phone: \"(921)425-6742\",\n    address: \"1514 Main Street, New York, NY 22298\",\n    city: \"New York\",\n    zipCode: \"15551\",\n    registrarId: 123512,\n  },\n  {\n    id: 5,\n    name: \"Daenerys Targaryen\",\n    email: \"daenerystargaryen@gmail.com\",\n    age: 31,\n    phone: \"(421)445-1189\",\n    address: \"11122 Welping Ave, Tenting, CD 21321\",\n    city: \"Tenting\",\n    zipCode: \"14215\",\n    registrarId: 123512,\n  },\n  {\n    id: 6,\n    name: \"Ever Melisandre\",\n    email: \"evermelisandre@gmail.com\",\n    age: 150,\n    phone: \"(232)545-6483\",\n    address: \"1234 Canvile Street, Esvazark, NY 10001\",\n    city: \"Esvazark\",\n    zipCode: \"10001\",\n    registrarId: 123512,\n  },\n  {\n    id: 7,\n    name: \"Ferrara Clifford\",\n    email: \"ferraraclifford@gmail.com\",\n    age: 44,\n    phone: \"(543)124-0123\",\n    address: \"22215 Super Street, Everting, ZO 515234\",\n    city: \"Evertin\",\n    zipCode: \"51523\",\n    registrarId: 123512,\n  },\n  {\n    id: 8,\n    name: \"Rossini Frances\",\n    email: \"rossinifrances@gmail.com\",\n    age: 36,\n    phone: \"(222)444-5555\",\n    address: \"4123 Ever Blvd, Wentington, AD 142213\",\n    city: \"Esteras\",\n    zipCode: \"44215\",\n    registrarId: 512315,\n  },\n  {\n    id: 9,\n    name: \"Harvey Roxie\",\n    email: \"harveyroxie@gmail.com\",\n    age: 65,\n    phone: \"(444)555-6239\",\n    address: \"51234 Avery Street, Cantory, ND 212412\",\n    city: \"Colunza\",\n    zipCode: \"111234\",\n    registrarId: 928397,\n  },\n  {\n    id: 10,\n    name: \"Enteri Redack\",\n    email: \"enteriredack@gmail.com\",\n    age: 42,\n    phone: \"(222)444-5555\",\n    address: \"4123 Easer Blvd, Wentington, AD 142213\",\n    city: \"Esteras\",\n    zipCode: \"44215\",\n    registrarId: 533215,\n  },\n  {\n    id: 11,\n    name: \"Steve Goodman\",\n    email: \"stevegoodmane@gmail.com\",\n    age: 11,\n    phone: \"(444)555-6239\",\n    address: \"51234 Fiveton Street, CunFory, ND 212412\",\n    city: \"Colunza\",\n    zipCode: \"1234\",\n    registrarId: 92197,\n  },\n];\n\nexport const mockDataInvoices = [\n  {\n    id: 1,\n    name: \"Jon Snow\",\n    email: \"jonsnow@gmail.com\",\n    cost: \"21.24\",\n    phone: \"(665)121-5454\",\n    date: \"03/12/2022\",\n  },\n  {\n    id: 2,\n    name: \"Cersei Lannister\",\n    email: \"cerseilannister@gmail.com\",\n    cost: \"1.24\",\n    phone: \"(421)314-2288\",\n    date: \"06/15/2021\",\n  },\n  {\n    id: 3,\n    name: \"Jaime Lannister\",\n    email: \"jaimelannister@gmail.com\",\n    cost: \"11.24\",\n    phone: \"(422)982-6739\",\n    date: \"05/02/2022\",\n  },\n  {\n    id: 4,\n    name: \"Anya Stark\",\n    email: \"anyastark@gmail.com\",\n    cost: \"80.55\",\n    phone: \"(921)425-6742\",\n    date: \"03/21/2022\",\n  },\n  {\n    id: 5,\n    name: \"Daenerys Targaryen\",\n    email: \"daenerystargaryen@gmail.com\",\n    cost: \"1.24\",\n    phone: \"(421)445-1189\",\n    date: \"01/12/2021\",\n  },\n  {\n    id: 6,\n    name: \"Ever Melisandre\",\n    email: \"evermelisandre@gmail.com\",\n    cost: \"63.12\",\n    phone: \"(232)545-6483\",\n    date: \"11/02/2022\",\n  },\n  {\n    id: 7,\n    name: \"Ferrara Clifford\",\n    email: \"ferraraclifford@gmail.com\",\n    cost: \"52.42\",\n    phone: \"(543)124-0123\",\n    date: \"02/11/2022\",\n  },\n  {\n    id: 8,\n    name: \"Rossini Frances\",\n    email: \"rossinifrances@gmail.com\",\n    cost: \"21.24\",\n    phone: \"(222)444-5555\",\n    date: \"05/02/2021\",\n  },\n];\n\nexport const mockTransactions = [\n  {\n    txId: \"01e4dsa\",\n    user: \"johndoe\",\n    date: \"2021-09-01\",\n    cost: \"43.95\",\n  },\n  {\n    txId: \"0315dsaa\",\n    user: \"jackdower\",\n    date: \"2022-04-01\",\n    cost: \"133.45\",\n  },\n  {\n    txId: \"01e4dsa\",\n    user: \"aberdohnny\",\n    date: \"2021-09-01\",\n    cost: \"43.95\",\n  },\n  {\n    txId: \"51034szv\",\n    user: \"goodmanave\",\n    date: \"2022-11-05\",\n    cost: \"200.95\",\n  },\n  {\n    txId: \"0a123sb\",\n    user: \"stevebower\",\n    date: \"2022-11-02\",\n    cost: \"13.55\",\n  },\n  {\n    txId: \"01e4dsa\",\n    user: \"aberdohnny\",\n    date: \"2021-09-01\",\n    cost: \"43.95\",\n  },\n  {\n    txId: \"120s51a\",\n    user: \"wootzifer\",\n    date: \"2019-04-15\",\n    cost: \"24.20\",\n  },\n  {\n    txId: \"0315dsaa\",\n    user: \"jackdower\",\n    date: \"2022-04-01\",\n    cost: \"133.45\",\n  },\n];\n\nexport const mockBarData = [\n  {\n    country: \"AD\",\n    \"hot dog\": 137,\n    \"hot dogColor\": \"hsl(229, 70%, 50%)\",\n    burger: 96,\n    burgerColor: \"hsl(296, 70%, 50%)\",\n    kebab: 72,\n    kebabColor: \"hsl(97, 70%, 50%)\",\n    donut: 140,\n    donutColor: \"hsl(340, 70%, 50%)\",\n  },\n  {\n    country: \"AE\",\n    \"hot dog\": 55,\n    \"hot dogColor\": \"hsl(307, 70%, 50%)\",\n    burger: 28,\n    burgerColor: \"hsl(111, 70%, 50%)\",\n    kebab: 58,\n    kebabColor: \"hsl(273, 70%, 50%)\",\n    donut: 29,\n    donutColor: \"hsl(275, 70%, 50%)\",\n  },\n  {\n    country: \"AF\",\n    \"hot dog\": 109,\n    \"hot dogColor\": \"hsl(72, 70%, 50%)\",\n    burger: 23,\n    burgerColor: \"hsl(96, 70%, 50%)\",\n    kebab: 34,\n    kebabColor: \"hsl(106, 70%, 50%)\",\n    donut: 152,\n    donutColor: \"hsl(256, 70%, 50%)\",\n  },\n  {\n    country: \"AG\",\n    \"hot dog\": 133,\n    \"hot dogColor\": \"hsl(257, 70%, 50%)\",\n    burger: 52,\n    burgerColor: \"hsl(326, 70%, 50%)\",\n    kebab: 43,\n    kebabColor: \"hsl(110, 70%, 50%)\",\n    donut: 83,\n    donutColor: \"hsl(9, 70%, 50%)\",\n  },\n  {\n    country: \"AI\",\n    \"hot dog\": 81,\n    \"hot dogColor\": \"hsl(190, 70%, 50%)\",\n    burger: 80,\n    burgerColor: \"hsl(325, 70%, 50%)\",\n    kebab: 112,\n    kebabColor: \"hsl(54, 70%, 50%)\",\n    donut: 35,\n    donutColor: \"hsl(285, 70%, 50%)\",\n  },\n  {\n    country: \"AL\",\n    \"hot dog\": 66,\n    \"hot dogColor\": \"hsl(208, 70%, 50%)\",\n    burger: 111,\n    burgerColor: \"hsl(334, 70%, 50%)\",\n    kebab: 167,\n    kebabColor: \"hsl(182, 70%, 50%)\",\n    donut: 18,\n    donutColor: \"hsl(76, 70%, 50%)\",\n  },\n  {\n    country: \"AM\",\n    \"hot dog\": 80,\n    \"hot dogColor\": \"hsl(87, 70%, 50%)\",\n    burger: 47,\n    burgerColor: \"hsl(141, 70%, 50%)\",\n    kebab: 158,\n    kebabColor: \"hsl(224, 70%, 50%)\",\n    donut: 49,\n    donutColor: \"hsl(274, 70%, 50%)\",\n  },\n];\n\nexport const mockPieData = [\n  {\n    id: \"hack\",\n    label: \"hack\",\n    value: 239,\n    color: \"hsl(104, 70%, 50%)\",\n  },\n  {\n    id: \"make\",\n    label: \"make\",\n    value: 170,\n    color: \"hsl(162, 70%, 50%)\",\n  },\n  {\n    id: \"go\",\n    label: \"go\",\n    value: 322,\n    color: \"hsl(291, 70%, 50%)\",\n  },\n  {\n    id: \"lisp\",\n    label: \"lisp\",\n    value: 503,\n    color: \"hsl(229, 70%, 50%)\",\n  },\n  {\n    id: \"scala\",\n    label: \"scala\",\n    value: 584,\n    color: \"hsl(344, 70%, 50%)\",\n  },\n];\n\nexport const mockLineData = [\n  {\n    id: \"japan\",\n    color: tokens(\"dark\").greenAccent[500],\n    data: [\n      {\n        x: \"plane\",\n        y: 101,\n      },\n      {\n        x: \"helicopter\",\n        y: 75,\n      },\n      {\n        x: \"boat\",\n        y: 36,\n      },\n      {\n        x: \"train\",\n        y: 216,\n      },\n      {\n        x: \"subway\",\n        y: 35,\n      },\n      {\n        x: \"bus\",\n        y: 236,\n      },\n      {\n        x: \"car\",\n        y: 88,\n      },\n      {\n        x: \"moto\",\n        y: 232,\n      },\n      {\n        x: \"bicycle\",\n        y: 281,\n      },\n      {\n        x: \"horse\",\n        y: 1,\n      },\n      {\n        x: \"skateboard\",\n        y: 35,\n      },\n      {\n        x: \"others\",\n        y: 14,\n      },\n    ],\n  },\n  {\n    id: \"france\",\n    color: tokens(\"dark\").blueAccent[300],\n    data: [\n      {\n        x: \"plane\",\n        y: 212,\n      },\n      {\n        x: \"helicopter\",\n        y: 190,\n      },\n      {\n        x: \"boat\",\n        y: 270,\n      },\n      {\n        x: \"train\",\n        y: 9,\n      },\n      {\n        x: \"subway\",\n        y: 75,\n      },\n      {\n        x: \"bus\",\n        y: 175,\n      },\n      {\n        x: \"car\",\n        y: 33,\n      },\n      {\n        x: \"moto\",\n        y: 189,\n      },\n      {\n        x: \"bicycle\",\n        y: 97,\n      },\n      {\n        x: \"horse\",\n        y: 87,\n      },\n      {\n        x: \"skateboard\",\n        y: 299,\n      },\n      {\n        x: \"others\",\n        y: 251,\n      },\n    ],\n  },\n  {\n    id: \"us\",\n    color: tokens(\"dark\").redAccent[200],\n    data: [\n      {\n        x: \"plane\",\n        y: 191,\n      },\n      {\n        x: \"helicopter\",\n        y: 136,\n      },\n      {\n        x: \"boat\",\n        y: 91,\n      },\n      {\n        x: \"train\",\n        y: 190,\n      },\n      {\n        x: \"subway\",\n        y: 211,\n      },\n      {\n        x: \"bus\",\n        y: 152,\n      },\n      {\n        x: \"car\",\n        y: 189,\n      },\n      {\n        x: \"moto\",\n        y: 152,\n      },\n      {\n        x: \"bicycle\",\n        y: 8,\n      },\n      {\n        x: \"horse\",\n        y: 197,\n      },\n      {\n        x: \"skateboard\",\n        y: 107,\n      },\n      {\n        x: \"others\",\n        y: 170,\n      },\n    ],\n  },\n];\n\nexport const mockGeographyData = [\n  {\n    id: \"AFG\",\n    value: 520600,\n  },\n  {\n    id: \"AGO\",\n    value: 949905,\n  },\n  {\n    id: \"ALB\",\n    value: 329910,\n  },\n  {\n    id: \"ARE\",\n    value: 675484,\n  },\n  {\n    id: \"ARG\",\n    value: 432239,\n  },\n  {\n    id: \"ARM\",\n    value: 288305,\n  },\n  {\n    id: \"ATA\",\n    value: 415648,\n  },\n  {\n    id: \"ATF\",\n    value: 665159,\n  },\n  {\n    id: \"AUT\",\n    value: 798526,\n  },\n  {\n    id: \"AZE\",\n    value: 481678,\n  },\n  {\n    id: \"BDI\",\n    value: 496457,\n  },\n  {\n    id: \"BEL\",\n    value: 252276,\n  },\n  {\n    id: \"BEN\",\n    value: 440315,\n  },\n  {\n    id: \"BFA\",\n    value: 343752,\n  },\n  {\n    id: \"BGD\",\n    value: 920203,\n  },\n  {\n    id: \"BGR\",\n    value: 261196,\n  },\n  {\n    id: \"BHS\",\n    value: 421551,\n  },\n  {\n    id: \"BIH\",\n    value: 974745,\n  },\n  {\n    id: \"BLR\",\n    value: 349288,\n  },\n  {\n    id: \"BLZ\",\n    value: 305983,\n  },\n  {\n    id: \"BOL\",\n    value: 430840,\n  },\n  {\n    id: \"BRN\",\n    value: 345666,\n  },\n  {\n    id: \"BTN\",\n    value: 649678,\n  },\n  {\n    id: \"BWA\",\n    value: 319392,\n  },\n  {\n    id: \"CAF\",\n    value: 722549,\n  },\n  {\n    id: \"CAN\",\n    value: 332843,\n  },\n  {\n    id: \"CHE\",\n    value: 122159,\n  },\n  {\n    id: \"CHL\",\n    value: 811736,\n  },\n  {\n    id: \"CHN\",\n    value: 593604,\n  },\n  {\n    id: \"CIV\",\n    value: 143219,\n  },\n  {\n    id: \"CMR\",\n    value: 630627,\n  },\n  {\n    id: \"COG\",\n    value: 498556,\n  },\n  {\n    id: \"COL\",\n    value: 660527,\n  },\n  {\n    id: \"CRI\",\n    value: 60262,\n  },\n  {\n    id: \"CUB\",\n    value: 177870,\n  },\n  {\n    id: \"-99\",\n    value: 463208,\n  },\n  {\n    id: \"CYP\",\n    value: 945909,\n  },\n  {\n    id: \"CZE\",\n    value: 500109,\n  },\n  {\n    id: \"DEU\",\n    value: 63345,\n  },\n  {\n    id: \"DJI\",\n    value: 634523,\n  },\n  {\n    id: \"DNK\",\n    value: 731068,\n  },\n  {\n    id: \"DOM\",\n    value: 262538,\n  },\n  {\n    id: \"DZA\",\n    value: 760695,\n  },\n  {\n    id: \"ECU\",\n    value: 301263,\n  },\n  {\n    id: \"EGY\",\n    value: 148475,\n  },\n  {\n    id: \"ERI\",\n    value: 939504,\n  },\n  {\n    id: \"ESP\",\n    value: 706050,\n  },\n  {\n    id: \"EST\",\n    value: 977015,\n  },\n  {\n    id: \"ETH\",\n    value: 461734,\n  },\n  {\n    id: \"FIN\",\n    value: 22800,\n  },\n  {\n    id: \"FJI\",\n    value: 18985,\n  },\n  {\n    id: \"FLK\",\n    value: 64986,\n  },\n  {\n    id: \"FRA\",\n    value: 447457,\n  },\n  {\n    id: \"GAB\",\n    value: 669675,\n  },\n  {\n    id: \"GBR\",\n    value: 757120,\n  },\n  {\n    id: \"GEO\",\n    value: 158702,\n  },\n  {\n    id: \"GHA\",\n    value: 893180,\n  },\n  {\n    id: \"GIN\",\n    value: 877288,\n  },\n  {\n    id: \"GMB\",\n    value: 724530,\n  },\n  {\n    id: \"GNB\",\n    value: 387753,\n  },\n  {\n    id: \"GNQ\",\n    value: 706118,\n  },\n  {\n    id: \"GRC\",\n    value: 377796,\n  },\n  {\n    id: \"GTM\",\n    value: 66890,\n  },\n  {\n    id: \"GUY\",\n    value: 719300,\n  },\n  {\n    id: \"HND\",\n    value: 739590,\n  },\n  {\n    id: \"HRV\",\n    value: 929467,\n  },\n  {\n    id: \"HTI\",\n    value: 538961,\n  },\n  {\n    id: \"HUN\",\n    value: 146095,\n  },\n  {\n    id: \"IDN\",\n    value: 490681,\n  },\n  {\n    id: \"IND\",\n    value: 549818,\n  },\n  {\n    id: \"IRL\",\n    value: 630163,\n  },\n  {\n    id: \"IRN\",\n    value: 596921,\n  },\n  {\n    id: \"IRQ\",\n    value: 767023,\n  },\n  {\n    id: \"ISL\",\n    value: 478682,\n  },\n  {\n    id: \"ISR\",\n    value: 963688,\n  },\n  {\n    id: \"ITA\",\n    value: 393089,\n  },\n  {\n    id: \"JAM\",\n    value: 83173,\n  },\n  {\n    id: \"JOR\",\n    value: 52005,\n  },\n  {\n    id: \"JPN\",\n    value: 199174,\n  },\n  {\n    id: \"KAZ\",\n    value: 181424,\n  },\n  {\n    id: \"KEN\",\n    value: 60946,\n  },\n  {\n    id: \"KGZ\",\n    value: 432478,\n  },\n  {\n    id: \"KHM\",\n    value: 254461,\n  },\n  {\n    id: \"OSA\",\n    value: 942447,\n  },\n  {\n    id: \"KWT\",\n    value: 414413,\n  },\n  {\n    id: \"LAO\",\n    value: 448339,\n  },\n  {\n    id: \"LBN\",\n    value: 620090,\n  },\n  {\n    id: \"LBR\",\n    value: 435950,\n  },\n  {\n    id: \"LBY\",\n    value: 75091,\n  },\n  {\n    id: \"LKA\",\n    value: 595124,\n  },\n  {\n    id: \"LSO\",\n    value: 483524,\n  },\n  {\n    id: \"LTU\",\n    value: 867357,\n  },\n  {\n    id: \"LUX\",\n    value: 689172,\n  },\n  {\n    id: \"LVA\",\n    value: 742980,\n  },\n  {\n    id: \"MAR\",\n    value: 236538,\n  },\n  {\n    id: \"MDA\",\n    value: 926836,\n  },\n  {\n    id: \"MDG\",\n    value: 840840,\n  },\n  {\n    id: \"MEX\",\n    value: 353910,\n  },\n  {\n    id: \"MKD\",\n    value: 505842,\n  },\n  {\n    id: \"MLI\",\n    value: 286082,\n  },\n  {\n    id: \"MMR\",\n    value: 915544,\n  },\n  {\n    id: \"MNE\",\n    value: 609500,\n  },\n  {\n    id: \"MNG\",\n    value: 410428,\n  },\n  {\n    id: \"MOZ\",\n    value: 32868,\n  },\n  {\n    id: \"MRT\",\n    value: 375671,\n  },\n  {\n    id: \"MWI\",\n    value: 591935,\n  },\n  {\n    id: \"MYS\",\n    value: 991644,\n  },\n  {\n    id: \"NAM\",\n    value: 701897,\n  },\n  {\n    id: \"NCL\",\n    value: 144098,\n  },\n  {\n    id: \"NER\",\n    value: 312944,\n  },\n  {\n    id: \"NGA\",\n    value: 862877,\n  },\n  {\n    id: \"NIC\",\n    value: 90831,\n  },\n  {\n    id: \"NLD\",\n    value: 281879,\n  },\n  {\n    id: \"NOR\",\n    value: 224537,\n  },\n  {\n    id: \"NPL\",\n    value: 322331,\n  },\n  {\n    id: \"NZL\",\n    value: 86615,\n  },\n  {\n    id: \"OMN\",\n    value: 707881,\n  },\n  {\n    id: \"PAK\",\n    value: 158577,\n  },\n  {\n    id: \"PAN\",\n    value: 738579,\n  },\n  {\n    id: \"PER\",\n    value: 248751,\n  },\n  {\n    id: \"PHL\",\n    value: 557292,\n  },\n  {\n    id: \"PNG\",\n    value: 516874,\n  },\n  {\n    id: \"POL\",\n    value: 682137,\n  },\n  {\n    id: \"PRI\",\n    value: 957399,\n  },\n  {\n    id: \"PRT\",\n    value: 846430,\n  },\n  {\n    id: \"PRY\",\n    value: 720555,\n  },\n  {\n    id: \"QAT\",\n    value: 478726,\n  },\n  {\n    id: \"ROU\",\n    value: 259318,\n  },\n  {\n    id: \"RUS\",\n    value: 268735,\n  },\n  {\n    id: \"RWA\",\n    value: 136781,\n  },\n  {\n    id: \"ESH\",\n    value: 151957,\n  },\n  {\n    id: \"SAU\",\n    value: 111821,\n  },\n  {\n    id: \"SDN\",\n    value: 927112,\n  },\n  {\n    id: \"SDS\",\n    value: 966473,\n  },\n  {\n    id: \"SEN\",\n    value: 158085,\n  },\n  {\n    id: \"SLB\",\n    value: 178389,\n  },\n  {\n    id: \"SLE\",\n    value: 528433,\n  },\n  {\n    id: \"SLV\",\n    value: 353467,\n  },\n  {\n    id: \"ABV\",\n    value: 251,\n  },\n  {\n    id: \"SOM\",\n    value: 445243,\n  },\n  {\n    id: \"SRB\",\n    value: 202402,\n  },\n  {\n    id: \"SUR\",\n    value: 972121,\n  },\n  {\n    id: \"SVK\",\n    value: 319923,\n  },\n  {\n    id: \"SVN\",\n    value: 728766,\n  },\n  {\n    id: \"SWZ\",\n    value: 379669,\n  },\n  {\n    id: \"SYR\",\n    value: 16221,\n  },\n  {\n    id: \"TCD\",\n    value: 101273,\n  },\n  {\n    id: \"TGO\",\n    value: 498411,\n  },\n  {\n    id: \"THA\",\n    value: 506906,\n  },\n  {\n    id: \"TJK\",\n    value: 613093,\n  },\n  {\n    id: \"TKM\",\n    value: 327016,\n  },\n  {\n    id: \"TLS\",\n    value: 607972,\n  },\n  {\n    id: \"TTO\",\n    value: 936365,\n  },\n  {\n    id: \"TUN\",\n    value: 898416,\n  },\n  {\n    id: \"TUR\",\n    value: 237783,\n  },\n  {\n    id: \"TWN\",\n    value: 878213,\n  },\n  {\n    id: \"TZA\",\n    value: 442174,\n  },\n  {\n    id: \"UGA\",\n    value: 720710,\n  },\n  {\n    id: \"UKR\",\n    value: 74172,\n  },\n  {\n    id: \"URY\",\n    value: 753177,\n  },\n  {\n    id: \"USA\",\n    value: 658725,\n  },\n  {\n    id: \"UZB\",\n    value: 550313,\n  },\n  {\n    id: \"VEN\",\n    value: 707492,\n  },\n  {\n    id: \"VNM\",\n    value: 538907,\n  },\n  {\n    id: \"VUT\",\n    value: 650646,\n  },\n  {\n    id: \"PSE\",\n    value: 476078,\n  },\n  {\n    id: \"YEM\",\n    value: 957751,\n  },\n  {\n    id: \"ZAF\",\n    value: 836949,\n  },\n  {\n    id: \"ZMB\",\n    value: 714503,\n  },\n  {\n    id: \"ZWE\",\n    value: 405217,\n  },\n  {\n    id: \"KOR\",\n    value: 171135,\n  },\n];\n","import { Typography, Box, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst Header = ({ title, subtitle }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <Box mb=\"30px\">\n      <Typography\n        variant=\"h2\"\n        color={colors.grey[100]}\n        fontWeight=\"bold\"\n        sx={{ m: \"0 0 5px 0\" }}\n      >\n        {title}\n      </Typography>\n      <Typography variant=\"h5\" color={colors.greenAccent[400]}>\n        {subtitle}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Header;\n","import { Box, Typography, useTheme } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { mockDataInvoices } from \"../../data/mockData\";\nimport Header from \"../../components/Header\";\n\nconst Invoices = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const columns = [\n    { field: \"id\", headerName: \"ID\" },\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      flex: 1,\n      cellClassName: \"name-column--cell\",\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone Number\",\n      flex: 1,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      flex: 1,\n    },\n    {\n      field: \"cost\",\n      headerName: \"Cost\",\n      flex: 1,\n      renderCell: (params) => (\n        <Typography color={colors.greenAccent[500]}>\n          ${params.row.cost}\n        </Typography>\n      ),\n    },\n    {\n      field: \"date\",\n      headerName: \"Date\",\n      flex: 1,\n    },\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Header title=\"INVOICES\" subtitle=\"List of Invoice Balances\" />\n      <Box\n        m=\"40px 0 0 0\"\n        height=\"75vh\"\n        sx={{\n          \"& .MuiDataGrid-root\": {\n            border: \"none\",\n          },\n          \"& .MuiDataGrid-cell\": {\n            borderBottom: \"none\",\n          },\n          \"& .name-column--cell\": {\n            color: colors.greenAccent[300],\n          },\n          \"& .MuiDataGrid-columnHeaders\": {\n            backgroundColor: colors.blueAccent[700],\n            borderBottom: \"none\",\n          },\n          \"& .MuiDataGrid-virtualScroller\": {\n            backgroundColor: colors.primary[400],\n          },\n          \"& .MuiDataGrid-footerContainer\": {\n            borderTop: \"none\",\n            backgroundColor: colors.blueAccent[700],\n          },\n          \"& .MuiCheckbox-root\": {\n            color: `${colors.greenAccent[200]} !important`,\n          },\n        }}\n      >\n        <DataGrid checkboxSelection rows={mockDataInvoices} columns={columns} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Invoices;\n","import { Box } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { mockDataContacts } from \"../../data/mockData\";\nimport Header from \"../../components/Header\";\nimport { useTheme } from \"@mui/material\";\nimport { AlignVerticalCenter } from \"@mui/icons-material\";\nimport SectionHeader from \"../../components/SectionHeader\";\n\nconst Contacts = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", flex: .5 , headerAlign: 'left', cellClassName: 'super-app-theme--cell'},\n    { field: \"registrarId\", headerName: \"REGISTER ID\",flex: 1 , headerAlign: 'left',  AlignVerticalCenter: true, },\n    {\n      field: \"name\",\n      headerName: \"NAME\",\n      flex: 1,\n      cellClassName: \"name-column--cell\",\n      headerAlign: 'left',\n    },\n    {\n      field: \"age\",\n      flex: .5,\n      headerName: \"AGE\",\n      type: \"number\",\n      headerAlign: \"left\",\n      align: \"left\",\n      headerAlign: 'left',\n    },\n    {\n      field: \"phone\",\n      headerName: \"PHONE NUMBER\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"email\",\n      headerName: \"EMAIL\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"address\",\n      headerName: \"ADDRESS\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"city\",\n      headerName: \"CITY\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n    {\n      field: \"zipCode\",\n      headerName: \"ZIPCODE\",\n      flex: 1,\n      headerAlign: 'left',\n    },\n  ];\n\n  return (\n    <Box m=\"50px\">\n      <Header\n        title=\"CONTACTS\"\n        subtitle=\"List of Contacts for Future Reference\"\n      />\n\n      <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n      <Box\n        m=\"0px 0 0 0\"\n        pb={20}\n        height=\"120vh\"\n        sx={{\n          \"& .MuiDataGrid-root\": {\n            border: \"none\",\n          },\n          \"& .MuiDataGrid-cell\": {\n            borderBottom: \"none\",\n          },\n          \"& .name-column--cell\": {\n            color: colors.redAccent[200], fontWeight: 'bold', fontSize:13\n           \n          },\n          \"& .MuiDataGrid-columnHeaders\": {\n            backgroundColor:\"rgba(255,255,255,0.6)\",\n            borderBottom: \"none\",\n            fontWeight: 'bold',\n            fontSize: '13px',\n            color: `${colors.grey[300]} !important`,\n          },\n          \"& .MuiDataGrid-virtualScroller\": {\n            background: \"rgba(255,255,255,1)\"\n          },\n          \"& .MuiDataGrid-footerContainer\": {\n            borderTop: \"none\",\n            backgroundColor: \"rgba(255,255,255,0.6)\",\n          },\n          \"& .MuiCheckbox-root\": {\n            color: `${colors.white[200]} !important`,\n          },\n          \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n          //  color: `${colors.grey[100]} !important`,\n          //backgroundColor: \"rgba(255,255,255,0.6)\",\n         // opacity:.5\n        \n          },\n        }}\n      >\n        \n        <DataGrid\n          rows={mockDataContacts}\n          columns={columns}\n          components={{ Toolbar: GridToolbar }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\n\n// Custom header component\nexport const PayoutHeader = () => {\n    return (\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12} borderRadius= {2}>\n         <TableContainer sx={{ borderRadius: \"0 0 8px 8px\"}}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                  <TableHead sx={{ background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" }}>\n                    <TableRow sx={{letterSpacing: \"1px\"  }}>\n                      <TableCell sx={{ paddingLeft: \"28px\" }} >Cycle</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Cut Off</TableCell>\n                      <TableCell>Pay Out By</TableCell>\n                      <TableCell align=\"right\" sx={{ paddingRight: \"28px\" }}>Details</TableCell>\n                    </TableRow>\n                  </TableHead>\n     \n       </Table>\n          </TableContainer>\n      </Grid>\n    );\n  };\n","import { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { PayoutHeader } from \"../../components/PayoutHeader\";\nimport { Box, Button, IconButton, Typography,useTheme } from \"@mui/material\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport { tokens } from \"../../theme\";\nimport * as React from \"react\";\nimport SectionHeader from \"../../components/SectionHeader\";\nconst columns = [\n  { field: 'id', headerName: 'ID', flex: 1  },\n  { field: 'firstName', headerName: 'First name', flex: 1 },\n  { field: 'lastName', headerName: 'Last name', flex: 1  },\n  { field: 'age', headerName: 'Age', type: 'number', flex: 1 },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  { id: 11, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 12, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 13, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 14, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 15, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 16, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 17, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 18, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 19, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n// Custom header component\nconst CustomHeader = () => {\n  return (\n    <div>\n      <h2>This is a Custom Header</h2>\n    </div>\n  );\n};\n\nconst DataGridDemo = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Box>\n  \n   \n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Payouts\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        pb={12}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n\n      <PayoutHeader></PayoutHeader>\n      <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={50} checkboxSelection  \n      autoHeight\n      \n      components={\n        \n        {\n          Toolbar: GridToolbar ,\n        header: CustomHeader // Use CustomHeader component as the header\n      }}/>\n      </div>\n      </Grid>\n      {/* Validations Section */}\n      \n      \n      {/* // background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" */}\n\n    </Grid>\n   \n\n    </Box>\n     /* Main Container */\n  );\n};\n\n// components={{ Toolbar: GridToolbar }} \nexport default DataGridDemo;\n","import { Box, useTheme } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { tokens } from \"../../theme\";\n\nconst FAQ = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <Box m=\"20px\">\n      <Header title=\"FAQ\" subtitle=\"Frequently Asked Questions Page\" />\n\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\n            An Important Question\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\n            Another Important Question\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\n            Your Favorite Question\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\n            Some Random Question\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\n            The Final Question\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default FAQ;\n","import { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Header from \"../../components/Header\";\n\nconst Form = () => {\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Box m=\"20px\">\n      <Header title=\"CREATE USER\" subtitle=\"Create a New User Profile\" />\n\n      <Formik\n        onSubmit={handleFormSubmit}\n        initialValues={initialValues}\n        validationSchema={checkoutSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <Box\n              display=\"grid\"\n              gap=\"30px\"\n              gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n              sx={{\n                \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n              }}\n            >\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"First Name\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.firstName}\n                name=\"firstName\"\n                error={!!touched.firstName && !!errors.firstName}\n                helperText={touched.firstName && errors.firstName}\n                sx={{ gridColumn: \"span 2\" }}\n              />\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"Last Name\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.lastName}\n                name=\"lastName\"\n                error={!!touched.lastName && !!errors.lastName}\n                helperText={touched.lastName && errors.lastName}\n                sx={{ gridColumn: \"span 2\" }}\n              />\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"Email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.email}\n                name=\"email\"\n                error={!!touched.email && !!errors.email}\n                helperText={touched.email && errors.email}\n                sx={{ gridColumn: \"span 4\" }}\n              />\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"Contact Number\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.contact}\n                name=\"contact\"\n                error={!!touched.contact && !!errors.contact}\n                helperText={touched.contact && errors.contact}\n                sx={{ gridColumn: \"span 4\" }}\n              />\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"Address 1\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.address1}\n                name=\"address1\"\n                error={!!touched.address1 && !!errors.address1}\n                helperText={touched.address1 && errors.address1}\n                sx={{ gridColumn: \"span 4\" }}\n              />\n              <TextField\n                fullWidth\n                variant=\"filled\"\n                type=\"text\"\n                label=\"Address 2\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.address2}\n                name=\"address2\"\n                error={!!touched.address2 && !!errors.address2}\n                helperText={touched.address2 && errors.address2}\n                sx={{ gridColumn: \"span 4\" }}\n              />\n            </Box>\n            <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\n              <Button type=\"submit\" color=\"secondary\" variant=\"contained\">\n                Create New User\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nconst phoneRegExp =\n  /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nconst checkoutSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  contact: yup\n    .string()\n    .matches(phoneRegExp, \"Phone number is not valid\")\n    .required(\"required\"),\n  address1: yup.string().required(\"required\"),\n  address2: yup.string().required(\"required\"),\n});\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  contact: \"\",\n  address1: \"\",\n  address2: \"\",\n};\n\nexport default Form;\n","import { Button, FormControlLabel, Grid, Link, TextField } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { atom, useAtom } from \"jotai\";\nimport * as React from \"react\";\nimport {\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../../config/AppConfig\";\nimport * as CONSTANT from \"../../../constants/Constant\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Box from \"@mui/material/Box\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport { initializeEncryption } from \"../../../services/AesGcmEncryption\";\nimport {\n  getBasicAuth,\n  getPayoutDetails,\n  getUserLoginDetails,\n} from \"../../../services/ApiService\";\nimport ConnectionStatus from \"../../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../../utils/UseOnlineStatus\";\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  deleteAllKeyFromLocalStorage,\n} from \"../../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../../components/ErrorAlertDialog\";\nimport {\n  ALERT,\n  AUTHENTICATING_PLEASE_WAIT,\n  DONT_HAVE_A_ACCOUNT_SIGNUP,\n  ERROR,\n  ERROR_WHILE_AUTHENTICATING_USER,\n  ERROR_WHILE_FETCHING_PAYOUT_DETAILS,\n  ERROR_WHILE_RETRIEVING_BASIC_AUTH,\n  FETCHING_PAYOUT_DETAILS_PLEASE_WAIT,\n  FORGOT_PASSWORD,\n  LOADING_CONFIGRATION_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  REMEMBER_ME,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../../constants/Strings\";\nimport DebugLog from \"../../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  MESSAGE_KEY,\n  SESSION_ID,\n  USER_ID,\n} from \"../../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../../services/ApiTags\";\n\nfunction LoginFieldBox() {\n  const navigate = useNavigate();\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    resetAllConfigration();\n\n    const basicAuthTokken = getFromLocalStorage(BASIC_AUTH_TOKKEN);\n    if (basicAuthTokken === undefined || basicAuthTokken === null)\n      requestBasicAuth(false);\n\n    showNoInternetSnackBar();\n  }, [isNetworkConnectionAvailable, enqueueSnackbar]);\n\n  \n\n  const resetAllConfigration = () => {\n    setAuthStatus(true);\n    setError(\"\");\n    setErrorDialog(false);\n    deleteAllKeyFromLocalStorage();\n  };\n\n  // Generate Basic Auth hHeader()\n  const requestBasicAuth = (isLoginApiCallRequired) => {\n    if (isNetworkConnectionAvailable) {\n      setProgressbarText(LOADING_CONFIGRATION_PLEASE_WAIT);\n      setLoading(true);\n      getBasicAuth(true)\n        .then((response) => {\n          DebugLog(\"getBasicAuth.data=====\" + JSON.stringify(response.data));\n          saveToLocalStorage(MESSAGE_KEY, response.data.messageKey);\n          saveToLocalStorage(BASIC_AUTH_TOKKEN, response.data.basicAuthToken);\n\n          if (isLoginApiCallRequired) {\n            doSignUp(email, password);\n          } else {\n            setLoading(false);\n          }\n        })\n        .catch((error) => {\n          showErrorAlert(ERROR, ERROR_WHILE_RETRIEVING_BASIC_AUTH + error);\n        });\n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  };\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n\n  async function doSignUp(email, pswd) {\n    try {\n      if (isNetworkConnectionAvailable) {\n        if (getFromLocalStorage(BASIC_AUTH_TOKKEN) != null) {\n          setProgressbarText(AUTHENTICATING_PLEASE_WAIT);\n          setLoading(true); // Hide the progress dialog\n\n          const imeiNumber = \"23423423423\";\n          const isAutoLogin = \"N\";\n          const loginId = email;\n          const password = pswd;\n\n          const signInData = {\n            imeiNumber: imeiNumber,\n            isAutoLogin: isAutoLogin,\n            loginId: loginId,\n            password: password,\n          };\n\n          initializeEncryption(\n            signInData,\n            getFromLocalStorage(MESSAGE_KEY),\n            ApiType.SIGN_IN\n          )\n            .then((encryptedLoginData) => {\n              DebugLog(\"Content data Login Data=====\" + encryptedLoginData);\n              saveToLocalStorage(LOGIN_ID, signInData.loginId);\n              const signInReqestData = {\n                //requestId: generateRequestId(),\n                loginId: signInData.loginId,\n                basicAuthToken: getFromLocalStorage(BASIC_AUTH_TOKKEN),\n               // contentData: encryptedLoginData,\n              };\n\n             \n              getUserLoginDetails(signInReqestData)\n                .then((response) => {\n\n                  DebugLog(\"response.data=====\"+response.data)\n                  DebugLog(\"response.data.result=====\"+response.data.result)\n                  DebugLog(\"response.data.result.sessionId====\"+response.data.result.sessionId)\n                  const sessionId = response.data.result.sessionId;\n                  DebugLog(\"sessionId=====\"+sessionId)\n\n                  saveToLocalStorage(SESSION_ID, sessionId);\n                  //saveToLocalStorage(USER_ID, response.data.result.userId);\n\n                  // open dashbaord on the basis of response type and login path\n                   goToDashboard();\n\n                  setLoading(false);\n\n                 \n                })\n                .catch((error) => {\n                  //if(error.response!=null)\n                  const message =\n                    error.response != null ? error.response : error.message;\n                  showErrorAlert(\n                    error.message,\n                    ERROR_WHILE_AUTHENTICATING_USER + JSON.stringify(message)\n                  );\n                });\n            })\n            .catch((error) => {\n              const message =\n                error.response != null ? error.response : error.message;\n              showErrorAlert(\n                error.message,\n                ERROR_WHILE_AUTHENTICATING_USER + JSON.stringify(message)\n              );\n            });\n        } else {\n          requestBasicAuth(true);\n        }\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_WHILE_AUTHENTICATING_USER + JSON.stringify(message)\n      );\n    }\n  }\n  // const getUserInfo = () => {\n  //   if (isNetworkConnectionAvailable) {\n  //     setProgressbarText(\"Loading User Info...\");\n  //     setLoading(true);\n  //     getUsers()\n  //       .then((response) => {\n  //         setUsers(response.data.users);\n\n  //         DebugLog(\"response.data=====\" + response.data.users[0].firstName);\n  //         // DebugLog(\"getUser[0]========\"+JSON.stringify(getUser));\n\n  //         setLoading(false); // Hide the progress dialog\n  //       })\n  //       .catch((error) => {\n  //         showErrorAlert(ERROR,\"Error in fetching Users: \" + error)\n  //       });\n  //   } else {\n  //     showErrorAlert(ALERT,NO_INTERNET_CONNECTION_FOUND)\n  //   }\n  // };\n  const handleFormSubmit = (values) => {\n    if (isNetworkConnectionAvailable) {\n      setEmail(values.emailValue);\n      setPassword(values.passwordValue);\n\n      if (getFromLocalStorage(BASIC_AUTH_TOKKEN) != null)\n        //values.preventDefault();\n        DebugLog(values);\n      DebugLog(values.emailValue);\n\n      doSignUp(values.emailValue, values.passwordValue);\n      // goToDashboard();\n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  };\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"error.data=====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  //  login button click listener\n  function goToDashboard() {\n    setAuthStatus(false);\n    navigate(CONSTANT.FINANCE_DASHBOARD);\n  }\n\n  return (\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n\n        <Box sx={{ mt: 1 }}>\n          <Formik\n            onSubmit={handleFormSubmit}\n            initialValues={initialValues}\n            validationSchema={checkoutSchema}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box>\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"emailValue\"\n                    autoComplete=\"current\"\n                    autoFocus\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.emailValue}\n                    error={!!touched.emailValue && !!errors.emailValue}\n                    helperText={touched.emailValue && errors.emailValue}\n                    sx={{ gridColumn: \"span 2\" }}\n                  />\n\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"passwordValue\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.passwordValue}\n                    error={!!touched.passwordValue && !!errors.passwordValue}\n                    helperText={touched.passwordValue && errors.passwordValue}\n                    sx={{ gridColumn: \"span 2\" }}\n                  />\n\n                  <FormControlLabel\n                    control={<CheckBox value=\"remember\" color=\"primary\" />}\n                    label={REMEMBER_ME}\n                  />\n\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Sign In\n                  </Button>\n\n                  {/* Form Elements */}\n                  <Grid container>\n                    <Grid item xs>\n                      <Link href=\"#\" variant=\"body2\">\n                        {FORGOT_PASSWORD}\n                      </Link>\n                    </Grid>\n                    <Grid item>\n                      <Link href=\"#\" variant=\"body2\">\n                        {DONT_HAVE_A_ACCOUNT_SIGNUP}\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </SnackbarProvider>\n    </Box>\n  );\n}\n\nexport default LoginFieldBox;\n\nconst checkoutSchema = yup.object().shape({\n  emailValue: yup.string().required(\"required\"),\n  passwordValue: yup.string().required(\"required\"),\n  //   email: yup.string().email(\"invalid email\").required(\"required\"),\n  //   contact: yup\n  //     .string()\n  //     .matches(phoneRegExp, \"Phone number is not valid\")\n  //     .required(\"required\"),\n  //   address1: yup.string().required(\"required\"),\n  //   address2: yup.string().required(\"required\"),\n});\nconst initialValues = {\n  //   user: \"\",\n  //   lastName: \"\",\n  emailValue: \"a0002_thasha\",\n  passwordValue: \"ytlc@xm1234\",\n  //   address1: \"\",\n  //   address2: \"\",\n};\n","import * as React from \"react\";\nimport { tokens } from \"../../theme\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport { Typography, useTheme } from \"@mui/material\";\nimport LoginFieldBox from \"./components/LoginFieldBox\";\n\nexport default function SignInSide() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    // <ThemeProvider theme={theme}>\n    // {/* Main Container - Body */}\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      {/* BG */}\n      <Grid\n        item\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        xl={12}\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        sx={{\n          backgroundImage: \"url(/assets/login/Login-BG-2.jpg)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center center\",\n        }}\n        // spacing={10}\n      >\n        <Grid\n          container\n          direction={\"row\"}\n          p={3}\n          justifyContent=\"space-evenly\"\n          alignItems={\"center\"}\n        >\n          <Grid item xs={12} sm={5} md={4} lg={4} xl={6} pb={5} mr={10}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <img src=\"assets/common/Logo-White.svg\" width={320} />\n            </Box>\n          </Grid>\n\n          {/* Login Container */}\n          <Grid\n            item\n            xs={12}\n            sm={5}\n            md={4}\n            lg={5}\n            xl={6}\n            component={Paper}\n            elevation={6}\n            sx={{\n              borderRadius: 2,\n              border: \"1px solid #E4EBF7\",\n            }}\n          >\n            {/* Header */}\n            <Box\n              sx={{\n                py: 6,\n                px: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography\n                variant=\"h5\"\n                color={colors.grey[100]}\n                fontWeight=\"bold\"\n                sx={{ m: \"0 0 5px 0\", fontSize: 24 }}\n              >\n                Login to Account\n              </Typography>\n              {/* Form Elements */}\n              <LoginFieldBox />\n\n              {/* <Copyright sx={{ mt: 5 }} /> */}\n            </Box>\n            {/* Header */}\n          </Grid>\n          {/* Login Container */}\n        </Grid>\n      </Grid>\n      {/* BG */}\n    </Grid>\n    // {/* Main Container - BG */}\n    // </ThemeProvider>\n  );\n}\n","import { tokens } from \"../theme\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport { Box, useTheme } from \"@mui/material\";\n\nconst HighlightBox = ({ highlightName, highlightCount, highlightBG, highlightColor, highlightIcon }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Grid item \n        // height={\"17.5vh\"}\n        xs={6}\n        sm={4}\n        md={4} \n        lg={4}\n        xl={4}\n        >\n      <Box\n        sx={{\n          background: colors.grey[900],\n          borderRadius: \"12px\",\n          padding: \"10px\",\n          border: \"1px solid\" + colors.grey[600],\n        }}\n      >\n        <Grid container direction={\"row\"}>\n          <Grid item xs={8.5} sm={8} md={9} lg={9.75}>\n            <Grid container direction={\"column\"}>\n              <Grid\n                item\n                sx={{\n                  margin: \"20px 0 0 30px\",\n                  padding: \"0\",\n                  fontSize: \"18px\",\n                  fontWeight: \"600\",\n                }}\n              >\n                {highlightName}\n              </Grid>\n\n              <Grid\n                item\n                sx={{\n                  margin: \"0px 0 0 20px\",\n                  fontSize: \"36px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {highlightCount}\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={3.5} sm={4} md={3} lg={2.25}>\n            <Box\n              display={\"flex\"}\n              alignItems=\"center\"\n              justifyContent={\"center\"}\n              sx={{\n                // backgroundColor: {highlightColor},\n                height: \"100%\",\n                borderRadius: \"8px\",\n                color: colors.greenAccent[900],\n              }}\n              backgroundColor={highlightBG}\n              color={highlightColor}\n            //   mx={\"auto\"}\n            >\n            <Box>\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={highlightIcon} width={24} />\n              </Box>\n            </Box>\n              \n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default HighlightBox;\n","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { tokens } from \"../theme\";\nimport React from \"react\";\nimport { Box, Typography, useTheme } from \"@mui/material\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport { FINANCE_DASHBOARD, VALIDATIONS } from '../../src/constants/Constant';\nimport { Link } from \"react-router-dom\";\nimport DebugLog from '../utils/DebugLog';\nimport NoDataFound from './NoDataFound';\n\nfunction createData(cycle, status, cutoff, payout, details) {\n    return { cycle, status, cutoff, payout, details};\n  }\n  \n  const rows = [\n    createData('Bi Weekly : 1st - 15th ', 'Need Approval', '20 Jan ‘24', '22 Jan ‘24', 'RM 1,000,000.00'),\n    createData('Weekly : 1st - 7th ', 'Scheduled', '20 Jan ‘24', '22 Jan ‘24', 'RM 100,000.00'),\n  ];\n  \n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (value, row) => `${row.firstName || ''} ${row.lastName || ''}`,\n    },\n  ];\n\n\n\nconst OnHoldSummaryTable = ({\n    statusBG,\n    statusData,\n    data,\n    to,\n  }) => {\n\n    const theme = useTheme();\n    const colors = tokens(theme.palette.mode);\n\n    const [selectedRow, setSelectedRow] = React.useState({});\n    DebugLog({ selectedRow });\n    DebugLog(\"data====\"+data);\n    \n\n    if (!data || data.length === 0) {\n      return (\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12} mb={30} pb={30} borderRadius= {2}>\n        <TableContainer sx={{ borderRadius: \"0 0 8px 8px\"}}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead sx={{ background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" }}>\n            <TableRow sx={{letterSpacing: \"1px\"  }}>\n              <TableCell sx={{ paddingLeft: \"28px\" }} >Name</TableCell>\n              <TableCell>Code</TableCell>\n              <TableCell>Start Date</TableCell>\n              <TableCell>End Date</TableCell>\n              <TableCell align=\"right\" sx={{ paddingRight: \"28px\" }}>Payout</TableCell>\n            </TableRow>\n          </TableHead>\n     \n       </Table>\n          </TableContainer>\n\n          <NoDataFound/>\n       </Grid>\n      );\n    }\n  \n\n    return (\n\n<Grid item xs={12} sm={12} md={12} lg={12} xl={12} borderRadius= {2}>\n\n          <TableContainer sx={{ borderRadius: \"0 0 8px 8px\"}}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                  <TableHead sx={{ background: \"rgba(255,255,255,0.6)\", color:\"#FF2300 !important\", textTransform: \"uppercase\" }}>\n                    <TableRow sx={{letterSpacing: \"1px\"  }}>\n                      <TableCell sx={{ paddingLeft: \"28px\" }} >Name</TableCell>\n                      <TableCell>Code</TableCell>\n                      <TableCell>Start Date</TableCell>\n                      <TableCell>End Date</TableCell>\n                      <TableCell align=\"right\" sx={{ paddingRight: \"28px\" }}>Payout</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody sx={{ background: \"rgba(255,255,255,1)\"}}>\n                \n                  \n                    {data.map(list => (\n                      <TableRow\n                        key={list.id}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 }, textDecoration: 'none !important' }}\n                        component={Link} to=\"/payouts\"\n                      >\n                        <TableCell component=\"th\" scope=\"row\" sx={{ paddingLeft: \"28px\", fontSize:14, fontWeight: 600 }}>\n                          {list.name}\n                         \n                        </TableCell>\n                        <TableCell \n                            sx={{ color:statusBG, fontWeight: 700, fontSize:13 }}\n                        >\n                            <Grid container direction={\"row\"} alignItems={\"center\"} spacing={1.5}>\n                                <Grid item>\n                                    <Box width={6} height={6} borderRadius={6} backgroundColor={statusBG}\n                                      sx={{ display: { xs:\"none\", sm:\"flex\"} }}\n                                    ></Box>\n                                </Grid>\n                                <Grid item>\n                                {list.code}\n                                </Grid>\n                            </Grid>\n                            \n                        </TableCell>\n                        <TableCell>{list.startDate}</TableCell>\n                        <TableCell>{list.endDate}</TableCell>\n                        <TableCell align=\"right\" sx={{ paddingRight: \"28px\", fontSize:15, fontWeight: 900 }}>{list.payout}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n          </TableContainer>\n\n        </Grid>\n\n);\n};\n\nexport default OnHoldSummaryTable;","import { Box, Button, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { tokens } from \"../../../theme\";\nimport GreetingHeader from \"../../../components/GreetingHeader\";\nimport SectionHeader from \"../../../components/SectionHeader\";\nimport SimpleTable from \"../../../components/SimpleTable\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport HighlightBox from \"../../../components/HighlightBox\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport ConnectionStatus from \"../../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../../utils/UseOnlineStatus\";\nimport {\n  getFromLocalStorage,\n} from \"../../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../../components/ErrorAlertDialog\";\nimport { atom, useAtom } from \"jotai\";\nimport {\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../../constants/Strings\";\nimport { initializeEncryption } from \"../../../services/AesGcmEncryption\";\nimport DebugLog from \"../../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  SESSION_ID,\n  USER_ID,\n} from \"../../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../../services/ApiTags\";\nimport {\n  getOnHoldSummary,\n  getPayoutSummary,\n} from \"../../../services/ApiService\";\nimport OnHoldSummaryTable from \"../../../components/OnHoldSummaryTable\";\n\nconst FinanceHomePage = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [payoutSummary, setPayoutSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n\n  useEffect(() => {\n    // get Payout Summary\n    getPayoutSummaryData();\n\n     // get on hold Summary\n    getOnHoldData();\n\n     // show no internet available message\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate]);\n\n\n  \n  function showErrorAlert(title, content) {\n    try {\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n\n  function getPayoutSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const payoutSummaryRequestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //basicAuthToken: getFromLocalStorage(BASIC_AUTH_TOKKEN)\n          //contentData: encryptedContentData,\n        };\n\n        getPayoutSummary(payoutSummaryRequestData)\n          .then((response) => {\n            setPayoutSummary(response.data.result.payoutSummaryList);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function getOnHoldData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldData(response.data.result.onHoldSummaryList);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  return (\n    /* Main Container */\n\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader\n                greeting={\"Welcome Back\"}\n                name={\"Sung Pik Yeng (Kellie) 👋🏻\"}\n              ></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlights Section */}\n          <Grid container direction={\"row\"} spacing={3}>\n            <HighlightBox\n              highlightName={\"To Approve\"}\n              highlightCount={\"100\"}\n              highlightBG={colors.primary[100]}\n              highlightColor={colors.greenAccent[100]}\n              highlightIcon={\"../../assets/common/Attention.svg\"}\n            ></HighlightBox>\n\n            <HighlightBox\n              highlightName={\"Scheduled\"}\n              highlightCount={\"10\"}\n              highlightBG={colors.primary[200]}\n              highlightColor={colors.greenAccent[100]}\n              highlightIcon={\"../../assets/common/Scheduled.svg\"}\n            ></HighlightBox>\n\n            <HighlightBox\n              highlightName={\"Validations\"}\n              highlightCount={\"12\"}\n              highlightBG={colors.primary[300]}\n              highlightColor={colors.greenAccent[100]}\n              highlightIcon={\"../../assets/common/Validations.svg\"}\n            ></HighlightBox>\n          </Grid>\n          {/* Highlights Section */}\n\n          {/* Payouts Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={2}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/Payouts.svg\"}\n              sectionHeading={\"Payouts\"}\n            ></SectionHeader>\n\n            <SimpleTable\n              statusData={\"Needs Approval\"}\n              statusBG={colors.primary[100]}\n              data={payoutSummary}\n            ></SimpleTable>\n          </Grid>\n          {/* Payouts Section */}\n\n          {/* Validations Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={2}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/Validations-black.svg\"}\n              sectionHeading={\"Validation\"}\n            ></SectionHeader>\n\n            <SimpleTable\n              statusData={\"In Validation\"}\n              statusBG={colors.primary[300]}\n              //data={payoutSummary}\n            ></SimpleTable>\n          </Grid>\n          {/* Validations Section */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={2}\n            xs={12}\n            sm={12}\n            md={12}\n            pb={12}\n            lg={12}\n            xl={12}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/OnHold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            <OnHoldSummaryTable\n              statusData={\"On Hold\"}\n              statusBG={colors.primary[300]}\n              data={onHoldData}\n            ></OnHoldSummaryTable>\n          </Grid>\n          {/* On Hold Section */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n};\n\nexport default FinanceHomePage;\n","import { tokens } from \"../theme\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport { Box, useTheme } from \"@mui/material\";\nimport Divider from \"@mui/material/Divider\";\n\nconst HighlightStats = ({\n  highlightTotal,\n  highlight1,\n  highlight1Stat,\n  highlight2,\n  highlight2Stat,\n  highlight3,\n  highlight3Stat,\n\n}) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Grid\n      container\n      direction={\"row\"}\n      justifyContent={\"space-around\"}\n      xs={12}\n      sx={{\n        background: colors.grey[900],\n        borderRadius: \"12px\",\n        border: \"1px solid\" + colors.grey[600],\n        padding: \"20px 30px\",\n      }}\n    >\n      <Grid\n        container\n        xs={12}\n        sm={2.5}\n        direction={\"column\"}\n        spacing={1}\n        justifyContent={\"space-between\"}\n      >\n        <Grid\n          item\n          sx={{\n            fontWeight: \"600\",\n            fontSize: \"15px\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          Total\n        </Grid>\n        <Grid\n          item\n          alignItems={\"center\"}\n          sx={{\n            fontSize: \"28px\",\n            fontWeight: \"600\",\n          }}\n        >\n          {highlightTotal}\n        </Grid>\n      </Grid>\n\n      <Divider\n        xs={2}\n        sm={0.5}\n        orientation=\"vertical\"\n        flexItem\n        sx={{\n          border: \"1px solid\" + colors.primary[100],\n          display: { xs: \"none\", sm: \"block\" },\n        }}\n      />\n\n      <Divider\n        xs={12}\n        sm={1}\n        orientation=\"horizontal\"\n        flexItem\n        sx={{\n          width: \"100%\",\n          margin: \"20px 0\",\n          border: \"1px solid\" + colors.primary[100],\n          display: { xs: \"block\", sm: \"none\" },\n        }}\n      />\n\n      <Grid\n        container\n        xs={12}\n        sm={9}\n        direction={\"row\"}\n        spacing={1}\n        justifyContent={\"space-around\"}\n      >\n        <Grid container direction={\"column\"} justifyContent={\"space-evenly\"}>\n            <Grid\n            item\n            sx={{\n                fontWeight: \"500\",\n                color: colors.grey[300],\n                fontSize: \"15px\",\n                textTransform: \"uppercase\",\n            }}\n            >\n            {highlight1}\n            </Grid>\n            <Grid\n            item\n            alignItems={\"center\"}\n            sx={{\n                fontSize: \"26px\",\n                fontWeight: \"600\",\n            }}\n            >\n            {highlight1Stat}\n            </Grid>\n        </Grid>\n        <Grid container direction={\"column\"} justifyContent={\"space-evenly\"}>\n            <Grid\n            item\n            sx={{\n                fontWeight: \"500\",\n                color: colors.grey[300],\n                fontSize: \"15px\",\n                textTransform: \"uppercase\",\n            }}\n            >\n            {highlight2}\n            </Grid>\n            <Grid\n            item\n            alignItems={\"center\"}\n            sx={{\n                fontSize: \"26px\",\n                fontWeight: \"600\",\n            }}\n            >\n            {highlight2Stat}\n            </Grid>\n        </Grid>\n        <Grid container direction={\"column\"} justifyContent={\"space-evenly\"}>\n            <Grid\n            item\n            sx={{\n                fontWeight: \"500\",\n                color: colors.grey[300],\n                fontSize: \"15px\",\n                textTransform: \"uppercase\",\n            }}\n            >\n            {highlight3}\n            </Grid>\n            <Grid\n            item\n            alignItems={\"center\"}\n            sx={{\n                fontSize: \"26px\",\n                fontWeight: \"600\",\n            }}\n            >\n            {highlight3Stat}\n            </Grid>\n        </Grid>\n        \n      </Grid>\n\n\n      </Grid>\n  );\n};\n\nexport default HighlightStats;\n","import { Typography } from \"@mui/material\";\n\n\nimport { Box, useTheme } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport HighlightStats from \"../../components/HighlightStats\";\nimport * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { useEffect, useState } from \"react\";\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport { getFromLocalStorage } from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  LOGIN_ID,\n  SESSION_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { getOnHoldSummary } from \"../../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onHoldSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\n\nexport function OnHoldSummary() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [onHoldSummary, setOnHoldSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = onHoldSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    requestOnHoldSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate, totalNoOfRows]);\n\n \n\n  function requestOnHoldSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldSummary(response.data.result.onHoldSummaryList);\n            setTotalNoOfRows(response.data.result.onHoldSummaryList.length);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"an error found====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n    /* Main Container */\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader name={\"On Hold\"}></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlight Stats */}\n          <HighlightStats\n            highlightTotal={\"100,000\"}\n            highlight1={\"Dealers\"}\n            highlight1Stat={\"4\"}\n            highlight2={\"Device Reimburse\"}\n            highlight2Stat={\"RM 100\"}\n            highlight3={\"Incentives\"}\n            highlight3Stat={\"RM 31.47\"}\n          ></HighlightStats>\n          {/* Highlight Stats */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={3}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            pb={2}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/onhold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            {onHoldSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={onHoldSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n          </Grid>\n\n          {onHoldSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n\n          {/* On Hold Section */}\n\n          {/* Action Buttons */}\n\n          {onHoldSummary.length > 0 ? (\n          <Grid item mt={1} justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n}\n","import { tokens } from \"../../theme\";\nimport * as React from \"react\";\n\nimport { Box, Button, IconButton, Typography,useTheme } from \"@mui/material\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\n\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  deleteAllKeyFromLocalStorage,\n  saveToLocalStorageJsonObject,\n} from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { atom, useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  AUTHENTICATING_PLEASE_WAIT,\n  DONT_HAVE_A_ACCOUNT_SIGNUP,\n  ERROR,\n  ERROR_WHILE_AUTHENTICATING_USER,\n  ERROR_WHILE_FETCHING_PAYOUT_DETAILS,\n  ERROR_WHILE_RETRIEVING_BASIC_AUTH,\n  FETCHING_PAYOUT_DETAILS_PLEASE_WAIT,\n  FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT,\n  FORGOT_PASSWORD,\n  LOADING_CONFIGRATION_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  REMEMBER_ME,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport { initializeEncryption } from \"../../services/AesGcmEncryption\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  MESSAGE_KEY,\n  SESSION_ID,\n  USER_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../services/ApiTags\";\nimport {\n  getBasicAuth,\n  getPayoutDetails,\n  getPayoutSummary,\n  getUserLoginDetails,\n} from \"../../services/ApiService\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\n\n\nimport * as CONSTANT from \"../../constants/Constant\";\nimport SimpleTable from \"../../components/SimpleTable\";\nimport { payoutSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\nimport CustomButton from \"../../components/CustomButton\";\n\nconst ExclusionScreen = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const navigate = useNavigate();\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [payoutSummary, setPayoutSummary] = useState([]);\n\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = payoutSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    // get Payout details\n    //getPayoutDetail();\n\n    getPayoutSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n\n  }, [isNetworkConnectionAvailable, enqueueSnackbar,totalNoOfRows]);\n\n\n\n  function blockNavigation (location, action)  {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === 'pop' ) {\n      // Optionally, you can show a message to the user before blocking navigation\n       alert('Back button is disabled.');\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  };\n\nasync function getPayoutSummaryData() {\n  try {\n    if (isNetworkConnectionAvailable) {\n    \n        setProgressbarText(FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const id = \"1\";\n        const pageNumber = 1;\n        const pageSize = 10;\n\n        const payoutDetails = {\n          id: id,\n          pageNumber: pageNumber,\n          pageSize: pageSize,\n        };\n\n        initializeEncryption(\n          payoutDetails,\n          getFromLocalStorage(MESSAGE_KEY),\n          ApiType.GET_PAYOUT_SUMMARY\n        ).then((encryptedContentData) => {\n         \n          const payoutSummaryRequestData = {\n            requestId: generateRequestId(),\n            loginId: getFromLocalStorage(LOGIN_ID),\n            sessionId: getFromLocalStorage(SESSION_ID),\n            //contentData: encryptedContentData,\n          };\n\n        \n          getPayoutSummary(payoutSummaryRequestData)\n            .then((response) => {\n            \n              setPayoutSummary(response.data.result.payoutSummaryList)\n              setTotalNoOfRows(response.data.result.payoutSummaryList.length);\n              setLoading(false);\n            })\n            .catch((error) => {\n              const message =\n                error.response != null ? error.response : error.message;\n              showErrorAlert(\n                error.message,\n                ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n              );\n            });\n        });\n      \n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  } catch (error) {\n    const message = error.response != null ? error.response : error.message;\n    showErrorAlert(\n      error.message,\n      ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n    );\n  }\n}\n\nasync function getPayoutDetail() {\n    try {\n      if (isNetworkConnectionAvailable) {\n      \n          setProgressbarText(FETCHING_PAYOUT_DETAILS_PLEASE_WAIT);\n          setLoading(true); // Hide the progress dialog\n\n          const id = \"1\";\n          const pageNumber = 1;\n          const pageSize = 10;\n\n          const payoutDetails = {\n            id: id,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n          };\n\n          initializeEncryption(\n            payoutDetails,\n            getFromLocalStorage(MESSAGE_KEY),\n            ApiType.GET_PAYOUT_DETAILS\n          ).then((encryptedContentData) => {\n            const payoutDetailsRequestData = {\n              requestId: generateRequestId(),\n              loginId: getFromLocalStorage(LOGIN_ID),\n              sessionId: getFromLocalStorage(SESSION_ID),\n              contentData: encryptedContentData,\n            };\n\n          \n            getPayoutDetails(payoutDetailsRequestData)\n              .then((response) => {\n                DebugLog(\n                  \"getPayoutDetails response.data=====\" +\n                    JSON.stringify(response.data)\n                );\n\n                setLoading(false);\n              })\n              .catch((error) => {\n                const message =\n                  error.response != null ? error.response : error.message;\n                showErrorAlert(\n                  error.message,\n                  ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n                );\n              });\n          });\n        \n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n      );\n    }\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"error.data=====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n     /* Main Container */\n    <Box>\n    <SnackbarProvider maxSnack={3}>\n    <ConnectionStatus />\n    <ShowErrorAlertDialog\n      status={getDialogStatus}\n      title={title}\n      content={content}\n    />\n    {isNetworkConnectionAvailable ? (\n      <CustomProgressDialog open={loading} text={getProgressbarText} />\n    ) : (\n      showNoInternetSnackBar()\n    )}\n   \n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Payouts\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        pb={2}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n\n{payoutSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={payoutSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n\n        {/* <SimpleTable\n          statusData={\"In Validation\"}\n          statusBG={colors.primary[300]}\n          data={payoutSummary}\n        ></SimpleTable> */}\n\n      </Grid>\n      {/* Validations Section */}\n\n      {payoutSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n    </Grid>\n\n      {/* Action Buttons */}\n\n      {payoutSummary.length > 0 ? (\n          <Grid item mt={1}  mr={10}   justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              {/* <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton> */}\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n       \n    </SnackbarProvider>\n    </Box>\n     /* Main Container */\n  );\n};\n\nexport default ExclusionScreen;\n\n","import { Typography } from \"@mui/material\";\n\n\nimport { Box, useTheme } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport HighlightStats from \"../../components/HighlightStats\";\nimport * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { useEffect, useState } from \"react\";\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport { getFromLocalStorage } from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  LOGIN_ID,\n  SESSION_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { getOnHoldSummary } from \"../../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onHoldSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\n\nexport function WitholdingTaxScreen() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [onHoldSummary, setOnHoldSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = onHoldSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    requestOnHoldSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate, totalNoOfRows]);\n\n \n\n  function requestOnHoldSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldSummary(response.data.result.onHoldSummaryList);\n            setTotalNoOfRows(response.data.result.onHoldSummaryList.length);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"an error found====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n    /* Main Container */\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader name={\"On Hold\"}></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlight Stats */}\n          <HighlightStats\n            highlightTotal={\"100,000\"}\n            highlight1={\"Dealers\"}\n            highlight1Stat={\"4\"}\n            highlight2={\"Device Reimburse\"}\n            highlight2Stat={\"RM 100\"}\n            highlight3={\"Incentives\"}\n            highlight3Stat={\"RM 31.47\"}\n          ></HighlightStats>\n          {/* Highlight Stats */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={3}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            pb={2}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/onhold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            {onHoldSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={onHoldSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n          </Grid>\n\n          {onHoldSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n\n          {/* On Hold Section */}\n\n          {/* Action Buttons */}\n\n          {onHoldSummary.length > 0 ? (\n          <Grid item mt={1} justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n}\n","import { Typography } from \"@mui/material\";\n\n\nimport { Box, useTheme } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport HighlightStats from \"../../components/HighlightStats\";\nimport * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { useEffect, useState } from \"react\";\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport { getFromLocalStorage } from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  LOGIN_ID,\n  SESSION_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { getOnHoldSummary } from \"../../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onHoldSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\n\nexport function FreezeAccountScreen() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [onHoldSummary, setOnHoldSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = onHoldSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    requestOnHoldSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate, totalNoOfRows]);\n\n \n\n  function requestOnHoldSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldSummary(response.data.result.onHoldSummaryList);\n            setTotalNoOfRows(response.data.result.onHoldSummaryList.length);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"an error found====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n    /* Main Container */\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader name={\"On Hold\"}></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlight Stats */}\n          <HighlightStats\n            highlightTotal={\"100,000\"}\n            highlight1={\"Dealers\"}\n            highlight1Stat={\"4\"}\n            highlight2={\"Device Reimburse\"}\n            highlight2Stat={\"RM 100\"}\n            highlight3={\"Incentives\"}\n            highlight3Stat={\"RM 31.47\"}\n          ></HighlightStats>\n          {/* Highlight Stats */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={3}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            pb={2}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/onhold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            {onHoldSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={onHoldSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n          </Grid>\n\n          {onHoldSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n\n          {/* On Hold Section */}\n\n          {/* Action Buttons */}\n\n          {onHoldSummary.length > 0 ? (\n          <Grid item mt={1} justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n}\n","import { Typography } from \"@mui/material\";\n\n\nimport { Box, useTheme } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport HighlightStats from \"../../components/HighlightStats\";\nimport * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { useEffect, useState } from \"react\";\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport { getFromLocalStorage } from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  LOGIN_ID,\n  SESSION_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { getOnHoldSummary } from \"../../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onHoldSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\n\nexport function CreditDebitScreen() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [onHoldSummary, setOnHoldSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = onHoldSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    requestOnHoldSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate, totalNoOfRows]);\n\n \n\n  function requestOnHoldSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldSummary(response.data.result.onHoldSummaryList);\n            setTotalNoOfRows(response.data.result.onHoldSummaryList.length);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"an error found====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n    /* Main Container */\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader name={\"On Hold\"}></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlight Stats */}\n          <HighlightStats\n            highlightTotal={\"100,000\"}\n            highlight1={\"Dealers\"}\n            highlight1Stat={\"4\"}\n            highlight2={\"Device Reimburse\"}\n            highlight2Stat={\"RM 100\"}\n            highlight3={\"Incentives\"}\n            highlight3Stat={\"RM 31.47\"}\n          ></HighlightStats>\n          {/* Highlight Stats */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={3}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            pb={2}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/onhold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            {onHoldSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={onHoldSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n          </Grid>\n\n          {onHoldSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n\n          {/* On Hold Section */}\n\n          {/* Action Buttons */}\n\n          {onHoldSummary.length > 0 ? (\n          <Grid item mt={1} justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n}\n","import { tokens } from \"../../theme\";\nimport * as React from \"react\";\n\nimport { Box, Button, IconButton, Typography,useTheme } from \"@mui/material\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport Grid from \"@mui/material/Unstable_Grid2\"; // Grid version 2\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\n\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n  deleteAllKeyFromLocalStorage,\n  saveToLocalStorageJsonObject,\n} from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { atom, useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  AUTHENTICATING_PLEASE_WAIT,\n  DONT_HAVE_A_ACCOUNT_SIGNUP,\n  ERROR,\n  ERROR_WHILE_AUTHENTICATING_USER,\n  ERROR_WHILE_FETCHING_PAYOUT_DETAILS,\n  ERROR_WHILE_RETRIEVING_BASIC_AUTH,\n  FETCHING_PAYOUT_DETAILS_PLEASE_WAIT,\n  FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT,\n  FORGOT_PASSWORD,\n  LOADING_CONFIGRATION_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  REMEMBER_ME,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport { initializeEncryption } from \"../../services/AesGcmEncryption\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  BASIC_AUTH_TOKKEN,\n  LOGIN_ID,\n  MESSAGE_KEY,\n  SESSION_ID,\n  USER_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { ApiType } from \"../../services/ApiTags\";\nimport {\n  getBasicAuth,\n  getPayoutDetails,\n  getPayoutSummary,\n  getUserLoginDetails,\n} from \"../../services/ApiService\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\n\n\nimport * as CONSTANT from \"../../constants/Constant\";\nimport SimpleTable from \"../../components/SimpleTable\";\nimport { payoutSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\nimport CustomButton from \"../../components/CustomButton\";\n\nconst PayoutDatesScreen = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const navigate = useNavigate();\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [payoutSummary, setPayoutSummary] = useState([]);\n\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = payoutSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    // get Payout details\n    //getPayoutDetail();\n\n    getPayoutSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n\n  }, [isNetworkConnectionAvailable, enqueueSnackbar,totalNoOfRows]);\n\n\n\n  function blockNavigation (location, action)  {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === 'pop' ) {\n      // Optionally, you can show a message to the user before blocking navigation\n       alert('Back button is disabled.');\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  };\n\nasync function getPayoutSummaryData() {\n  try {\n    if (isNetworkConnectionAvailable) {\n    \n        setProgressbarText(FETCHING_PAYOUT_SUMMARY_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const id = \"1\";\n        const pageNumber = 1;\n        const pageSize = 10;\n\n        const payoutDetails = {\n          id: id,\n          pageNumber: pageNumber,\n          pageSize: pageSize,\n        };\n\n        initializeEncryption(\n          payoutDetails,\n          getFromLocalStorage(MESSAGE_KEY),\n          ApiType.GET_PAYOUT_SUMMARY\n        ).then((encryptedContentData) => {\n         \n          const payoutSummaryRequestData = {\n            requestId: generateRequestId(),\n            loginId: getFromLocalStorage(LOGIN_ID),\n            sessionId: getFromLocalStorage(SESSION_ID),\n            //contentData: encryptedContentData,\n          };\n\n        \n          getPayoutSummary(payoutSummaryRequestData)\n            .then((response) => {\n            \n              setPayoutSummary(response.data.result.payoutSummaryList)\n              setTotalNoOfRows(response.data.result.payoutSummaryList.length);\n              setLoading(false);\n            })\n            .catch((error) => {\n              const message =\n                error.response != null ? error.response : error.message;\n              showErrorAlert(\n                error.message,\n                ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n              );\n            });\n        });\n      \n    } else {\n      showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n    }\n  } catch (error) {\n    const message = error.response != null ? error.response : error.message;\n    showErrorAlert(\n      error.message,\n      ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n    );\n  }\n}\n\nasync function getPayoutDetail() {\n    try {\n      if (isNetworkConnectionAvailable) {\n      \n          setProgressbarText(FETCHING_PAYOUT_DETAILS_PLEASE_WAIT);\n          setLoading(true); // Hide the progress dialog\n\n          const id = \"1\";\n          const pageNumber = 1;\n          const pageSize = 10;\n\n          const payoutDetails = {\n            id: id,\n            pageNumber: pageNumber,\n            pageSize: pageSize,\n          };\n\n          initializeEncryption(\n            payoutDetails,\n            getFromLocalStorage(MESSAGE_KEY),\n            ApiType.GET_PAYOUT_DETAILS\n          ).then((encryptedContentData) => {\n            const payoutDetailsRequestData = {\n              requestId: generateRequestId(),\n              loginId: getFromLocalStorage(LOGIN_ID),\n              sessionId: getFromLocalStorage(SESSION_ID),\n              contentData: encryptedContentData,\n            };\n\n          \n            getPayoutDetails(payoutDetailsRequestData)\n              .then((response) => {\n                DebugLog(\n                  \"getPayoutDetails response.data=====\" +\n                    JSON.stringify(response.data)\n                );\n\n                setLoading(false);\n              })\n              .catch((error) => {\n                const message =\n                  error.response != null ? error.response : error.message;\n                showErrorAlert(\n                  error.message,\n                  ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n                );\n              });\n          });\n        \n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_WHILE_FETCHING_PAYOUT_DETAILS + JSON.stringify(message)\n      );\n    }\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"error.data=====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n     /* Main Container */\n    <Box>\n    <SnackbarProvider maxSnack={3}>\n    <ConnectionStatus />\n    <ShowErrorAlertDialog\n      status={getDialogStatus}\n      title={title}\n      content={content}\n    />\n    {isNetworkConnectionAvailable ? (\n      <CustomProgressDialog open={loading} text={getProgressbarText} />\n    ) : (\n      showNoInternetSnackBar()\n    )}\n   \n    <Grid\n      container\n      component=\"main\"\n      direction={\"column\"}\n      sx={{\n        // height: \"100vh\",\n        m: \"0 2.5%\" /* Approx 30px */,\n        borderRadius: \"18px\",\n      }}\n    >\n      {/* Greetings Header */}\n      <Grid container>\n        <Grid item>\n          <GreetingHeader name={\"Payouts\"}></GreetingHeader>\n        </Grid>\n      </Grid>\n      {/* Greetings Header */}\n\n      {/* Validations Section */}\n      <Grid\n        container\n        mt={3}\n        border={\"1px solid\" + colors.grey[600]}\n        borderRadius={2}\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        pb={2}\n      >\n        <SectionHeader\n          sectionIcon={\"../../assets/common/Payouts.svg\"}\n          sectionHeading={\"Payouts\"}\n        ></SectionHeader>\n\n{payoutSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={payoutSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n\n        {/* <SimpleTable\n          statusData={\"In Validation\"}\n          statusBG={colors.primary[300]}\n          data={payoutSummary}\n        ></SimpleTable> */}\n\n      </Grid>\n      {/* Validations Section */}\n\n      {payoutSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n    </Grid>\n\n      {/* Action Buttons */}\n\n      {payoutSummary.length > 0 ? (\n          <Grid item mt={1}  mr={10}   justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              {/* <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton> */}\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n       \n    </SnackbarProvider>\n    </Box>\n     /* Main Container */\n  );\n};\n\nexport default PayoutDatesScreen;\n\n","import { Typography } from \"@mui/material\";\n\n\nimport { Box, useTheme } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { tokens } from \"../../theme\";\nimport GreetingHeader from \"../../components/GreetingHeader\";\nimport SectionHeader from \"../../components/SectionHeader\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport HighlightStats from \"../../components/HighlightStats\";\nimport * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { useEffect, useState } from \"react\";\nimport ConnectionStatus from \"../../utils/ConnectionStatus\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport UseOnlineStatus from \"../../utils/UseOnlineStatus\";\nimport { getFromLocalStorage } from \"../../utils/localStorageUtils\";\nimport CustomProgressDialog from \"../../components/CustomProgressDialog\";\nimport ShowErrorAlertDialog from \"../../components/ErrorAlertDialog\";\nimport { useAtom } from \"jotai\";\nimport {\n  globalSearchText,\n  isAuthPageAtom,\n  showErrorAlertDialog,\n} from \"../../config/AppConfig\";\nimport {\n  ALERT,\n  ERROR_FOUND_DURING_API_CALL,\n  LOADING_PLEASE_WAIT,\n  NO_INTERNET_CONNECTION_FOUND,\n  YOU_ARE_OFFLINE,\n  YOU_ARE_ONLINE,\n} from \"../../constants/Strings\";\nimport DebugLog from \"../../utils/DebugLog\";\nimport {\n  LOGIN_ID,\n  SESSION_ID,\n} from \"../../constants/LocalStorageKeyValuePairString\";\nimport { generateRequestId } from \"../../utils/RequestIdGenerator\";\nimport { getOnHoldSummary } from \"../../services/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onHoldSummaryColumnHeader } from \"../../components/ColumnHeader\";\nimport NoDataFound from \"../../components/NoDataFound\";\n\nexport function EarmarkScreen() {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  const isNetworkConnectionAvailable = UseOnlineStatus();\n\n  const [, setAuthStatus] = useAtom(isAuthPageAtom);\n  const [getDialogStatus, setErrorDialog] = useAtom(showErrorAlertDialog);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(ALERT);\n  const [content, setContent] = useState(\"\");\n  const [, setError] = useState(\"\");\n  const [getProgressbarText, setProgressbarText] = useState(\"\");\n\n  const [onHoldSummary, setOnHoldSummary] = useState([]);\n  const [onHoldData, setOnHoldData] = useState([]);\n  const [gridHeight, setGridHeight] = useState(108); // Default height\n  const [totalNoOfRows, setTotalNoOfRows] = useState(0); // Default height\n  const [pageSize, setPageSize] = useState(25);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useAtom(globalSearchText);\n\n\n  const handlePageJump = (event) => {\n    setCurrentPage(parseInt(event.target.value, 10) - 1);\n  };\n\n  const filteredRows = onHoldSummary.filter((row) =>\n    Object.values(row).some((value) =>\n      String(value).toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n   // increase - decrease list layout height on available list itmes count\n   function getDataGridHeight() {\n    // Calculate the total height required for the grid\n    const headerHeight = 100; // Height of header row\n    const rowHeight = 100; // Height of each data row\n    const rowCount = totalNoOfRows; // Total number of data rows\n    const totalHeight = headerHeight + rowCount * rowHeight;\n\n    // Set the grid height\n    setGridHeight(totalHeight);\n  }\n\n  useEffect(() => {\n\n    getDataGridHeight();\n\n    requestOnHoldSummaryData();\n\n    showNoInternetSnackBar();\n\n    navigate(blockNavigation);\n  }, [isNetworkConnectionAvailable, enqueueSnackbar, navigate, totalNoOfRows]);\n\n \n\n  function requestOnHoldSummaryData() {\n    try {\n      if (isNetworkConnectionAvailable) {\n        setProgressbarText(LOADING_PLEASE_WAIT);\n        setLoading(true); // Hide the progress dialog\n\n        const requestData = {\n          requestId: generateRequestId(),\n          loginId: getFromLocalStorage(LOGIN_ID),\n          sessionId: getFromLocalStorage(SESSION_ID),\n          //contentData: encryptedContentData,\n        };\n\n        getOnHoldSummary(requestData)\n          .then((response) => {\n            setOnHoldSummary(response.data.result.onHoldSummaryList);\n            setTotalNoOfRows(response.data.result.onHoldSummaryList.length);\n            setLoading(false);\n          })\n          .catch((error) => {\n            const message =\n              error.response != null ? error.response : error.message;\n            showErrorAlert(\n              error.message,\n              ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n            );\n          });\n      } else {\n        showErrorAlert(ALERT, NO_INTERNET_CONNECTION_FOUND);\n      }\n    } catch (error) {\n      const message = error.response != null ? error.response : error.message;\n      showErrorAlert(\n        error.message,\n        ERROR_FOUND_DURING_API_CALL + JSON.stringify(message)\n      );\n    }\n  }\n\n  function blockNavigation(location, action) {\n    // Block navigation if action is \"pop\", which indicates back/forward button press\n    if (action === \"pop\") {\n      // Optionally, you can show a message to the user before blocking navigation\n      alert(\"Back button is disabled.\");\n      return false;\n    }\n    return true; // Allow navigation for other actions like \"push\" or \"replace\"\n  }\n\n  function showErrorAlert(title, content) {\n    try {\n      DebugLog(\"an error found====\" + content);\n      setError();\n      setLoading(false);\n\n      setTitle(title);\n      setContent(content);\n      setErrorDialog(true);\n    } catch (error) {\n      DebugLog(error);\n    }\n  }\n\n  const showNoInternetSnackBar = () => {\n    if (isNetworkConnectionAvailable) {\n      enqueueSnackbar(YOU_ARE_ONLINE);\n    } else {\n      enqueueSnackbar(YOU_ARE_OFFLINE, {\n        autoHideDuration: 3000,\n        variant: \"error\",\n      });\n    }\n  };\n  return (\n    /* Main Container */\n    <Box>\n      <SnackbarProvider maxSnack={3}>\n        <ConnectionStatus />\n        <ShowErrorAlertDialog\n          status={getDialogStatus}\n          title={title}\n          content={content}\n        />\n        {isNetworkConnectionAvailable ? (\n          <CustomProgressDialog open={loading} text={getProgressbarText} />\n        ) : (\n          showNoInternetSnackBar()\n        )}\n        <Grid\n          container\n          component=\"main\"\n          direction={\"column\"}\n          sx={{\n            // height: \"100vh\",\n            m: \"0 2.5%\" /* Approx 30px */,\n            borderRadius: \"18px\",\n          }}\n        >\n          {/* Greetings Header */}\n          <Grid container>\n            <Grid item>\n              <GreetingHeader name={\"On Hold\"}></GreetingHeader>\n            </Grid>\n          </Grid>\n          {/* Greetings Header */}\n\n          {/* Highlight Stats */}\n          <HighlightStats\n            highlightTotal={\"100,000\"}\n            highlight1={\"Dealers\"}\n            highlight1Stat={\"4\"}\n            highlight2={\"Device Reimburse\"}\n            highlight2Stat={\"RM 100\"}\n            highlight3={\"Incentives\"}\n            highlight3Stat={\"RM 31.47\"}\n          ></HighlightStats>\n          {/* Highlight Stats */}\n\n          {/* On Hold Section */}\n          <Grid\n            container\n            mt={3}\n            border={\"1px solid\" + colors.grey[600]}\n            borderRadius={3}\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            pb={2}\n          >\n            <SectionHeader\n              sectionIcon={\"../../assets/common/onhold.svg\"}\n              sectionHeading={\"On Hold\"}\n            ></SectionHeader>\n\n            {onHoldSummary.length > 0 ? (\n              <Box\n                borderRadius={3}\n                flex={1}\n                m=\"0px 0 0 0\"\n                pb={0}\n                height={gridHeight}\n                sx={{\n                  \"& .MuiDataGrid-root\": {\n                    border: \"none\",\n                  },\n                  \"& .MuiDataGrid-cell\": {\n                    borderBottom: \"none\",\n                  },\n                  \"& .name-column--cell\": {\n                    color: colors.redAccent[200],\n                    fontWeight: \"bold\",\n                    fontSize: 13,\n                  },\n                  \"& .MuiDataGrid-columnHeaders\": {\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                    borderBottom: \"none\",\n                    fontWeight: \"bold\",\n                    fontSize: \"13px\",\n                    color: `${colors.grey[300]} !important`,\n                  },\n                  \"& .MuiDataGrid-virtualScroller\": {\n                    background: \"rgba(255,255,255,1)\",\n                  },\n                  \"& .MuiDataGrid-footerContainer\": {\n                    borderTop: \"none\",\n                    backgroundColor: \"rgba(255,255,255,0.6)\",\n                  },\n                  \"& .MuiCheckbox-root\": {\n                    //color: `${colors.white[200]} !important`,\n                  },\n                  \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n                    //  color: `${colors.grey[100]} !important`,\n                    //backgroundColor: \"rgba(255,255,255,0.6)\",\n                    // opacity:.5\n                  },\n                }}\n              >\n                <DataGrid\n                  rows={filteredRows.slice(\n                    currentPage * pageSize,\n                    (currentPage + 1) * pageSize\n                  )}\n                  columns={onHoldSummaryColumnHeader}\n                  components={{ Toolbar: GridToolbar }}\n                  checkboxSelection\n                  selecion\n                  pageSize={pageSize}\n                  rowCount={filteredRows.length}\n                  pagination\n                  onPageChange={handlePageChange}\n                />\n              </Box>\n            ) : (\n              NoDataFound()\n            )}\n            \n          </Grid>\n\n          {onHoldSummary.length > 0 ? (\n            <Box>\n              <Typography>\n                <span>Jump to page: </span>\n                <select value={currentPage + 1} onChange={handlePageJump}>\n                  {[...Array(totalNoOfRows)].map((_, index) => (\n                    <option key={index} value={index + 1}>\n                      {index + 1}\n                    </option>\n                  ))}\n                </select>\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n\n          {/* On Hold Section */}\n\n          {/* Action Buttons */}\n\n          {onHoldSummary.length > 0 ? (\n          <Grid item mt={1} justifyContent={\"flex-start\"} pb={10}>\n            <Stack direction=\"row\" spacing={2} justifyContent={\"flex-end\"}>\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Cross.svg\" width={22} />\n                }\n                btnTxt={\"Cancel\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Tick.svg\" width={22} />\n                }\n                btnTxt={\"Release\"}\n              ></CustomButton>\n\n              <CustomButton\n                btnBG={colors.grey[900]}\n                btnColor={colors.grey[100]}\n                btnStartIcon={\n                  <img src=\"../../assets/common/Download.svg\" width={22} />\n                }\n                btnEndIcon={\n                  <img src=\"../../assets/common/Arrow-down.svg\" height={8} />\n                }\n                btnTxt={\"Download\"}\n              ></CustomButton>\n            </Stack>\n          </Grid>\n  ) : (\n    \"\"\n  )}\n          {/* Action Buttons */}\n        </Grid>\n      </SnackbarProvider>\n    </Box>\n    /* Main Container */\n  );\n}\n","import \"./App.css\";\nimport { Box} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Topbar from \"./scenes/global/Topbar\";\nimport Sidebar from \"./scenes/global/Sidebar\";\nimport * as yup from \"yup\";\n\n// import Dashboard from \"./scenes/dashboard\";\nimport Validations from \"./scenes/validations\";\nimport PayoutsArchive from \"./scenes/payoutsArchive\";\nimport Payouts from \"./scenes/payouts\";\nimport Invoices from \"./scenes/invoices\";\nimport Contacts from \"./scenes/contacts\";\nimport DataGridDemo from \"./scenes/contacts/DataGridDemo\";\n\n\nimport FAQ from \"./scenes/faq\";\nimport Form from \"./scenes/form\";\n// import Bar from \"./scenes/bar\";\n// \n// import Line from \"./scenes/line\";\n// import Pie from \"./scenes/pie\";\n// \n// import Geography from \"./scenes/geography\";\nimport { CssBaseline, ThemeProvider, colors } from \"@mui/material\";\nimport { ColorModeContext, useMode } from \"./theme\";\n//import Calendar from \"./scenes/calendar/calendar\";\nimport SignInSide from \"./scenes/login/SignInSide\";\nimport * as CONSTANT from \"./constants/Constant\";\nimport FinanceHomePage from \"./scenes/dashboard/finance/FinanceHomePage\";\n\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ConnectionStatus from \"./utils/ConnectionStatus\";\nimport UseOnlineStatus from \"./utils/UseOnlineStatus\";\nimport CustomProgressDialog from \"./components/CustomProgressDialog\";\nimport { OnHoldSummary } from \"./scenes/onhold\";\nimport ExclusionScreen from \"./scenes/exclusion\";\nimport { WitholdingTaxScreen } from \"./scenes/witholdingTax\";\nimport { FreezeAccountScreen } from \"./scenes/freezeAccount\";\nimport { CreditDebitScreen } from \"./scenes/creditDebit\";\nimport PayoutDatesScreen from \"./scenes/payoutDates\";\nimport { EarmarkScreen } from \"./scenes/earmark\";\n\n function App() {\n  const [theme, colorMode] = useMode();\n  const [isSidebar, setIsSidebar] = useState(false);  \n// Prevent clicks on the progress indicator itself from affecting the loading state\nconst handleProgressClick = (event) => {\n  event.stopPropagation();\n};\n\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n       \n\n        <div className=\"app\"  onClick={handleProgressClick}>\n          <Sidebar isSidebar={isSidebar} />\n          <main className=\"content\">\n            <Topbar setIsSidebar={setIsSidebar} />\n            <Routes>\n            <Route path=\"/\" element={<SignInSide />} />\n            <Route path={CONSTANT.LOGIN} element={<SignInSide />} />\n            <Route path={CONSTANT.FINANCE_DASHBOARD} element={<FinanceHomePage />} />\n            {/* <Route path={CONSTANT.DELAER_DASHBOARD_ROUTE} element={<Dashboard />} /> */}\n\n              <Route path={CONSTANT.VALIDATION_ROUTE} element={<Validations />} />\n              <Route path={CONSTANT.PAYOUT_ARCHIEVE_ROUTE} element={<PayoutsArchive />} />\n              <Route path={CONSTANT.PAYOUT_ROUTE} element={<Payouts />} />\n              <Route path={CONSTANT.ON_HOLD_ROUTE} element={<OnHoldSummary />} />\n              <Route path={CONSTANT.CONTACT_ROUTE} element={<Contacts />} />\n              <Route path={CONSTANT.INVOICES_ROUTE} element={<Invoices />} />\n              <Route path={CONSTANT.EXCLUSION_ROUTE} element={<ExclusionScreen />} />\n              <Route path={CONSTANT.PAYOUT_DATES_ROUTE} element={<PayoutDatesScreen />} />\n              <Route path={CONSTANT.WITHOLDING_TAX_ROUTE} element={<WitholdingTaxScreen />} />\n              <Route path={CONSTANT.FREEZE_ACCOUNT_ROUTE} element={<FreezeAccountScreen />} />\n              <Route path={CONSTANT.CREDIT_DEBIT_ROUTE} element={<CreditDebitScreen />} />\n              <Route path={CONSTANT.REPORTS_ROUTE} element={<FAQ />} />\n              <Route path={CONSTANT.EARMARK_ROUTE} element={<EarmarkScreen />} />\n\n              \n\n              \n              <Route path={CONSTANT.FORMS_ROUTE} element={<Form />} />\n              <Route path=\"/team\" element={<DataGridDemo />} />\n              \n              {/* \n              <Route path=\"/bar\" element={<Bar />} />\n              <Route path=\"/pie\" element={<Pie />} />\n              <Route path=\"/line\" element={<Line />} /> */}\n              <Route path=\"/faq\" element={<FAQ />} />\n              {/* <Route path=\"/calendar\" element={<Calendar />} />\n              <Route path=\"/geography\" element={<Geography />} /> */}\n            </Routes>\n          </main>\n        </div>\n       \n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n\n\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}